// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CNN_1D_Loop_Loop_Con (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        intermediate_0_V_V_dout,
        intermediate_0_V_V_empty_n,
        intermediate_0_V_V_read,
        intermediate_1_V_V_dout,
        intermediate_1_V_V_empty_n,
        intermediate_1_V_V_read,
        intermediate_2_V_V_dout,
        intermediate_2_V_V_empty_n,
        intermediate_2_V_V_read,
        intermediate_3_V_V_dout,
        intermediate_3_V_V_empty_n,
        intermediate_3_V_V_read,
        intermediate_4_V_V_dout,
        intermediate_4_V_V_empty_n,
        intermediate_4_V_V_read,
        intermediate_5_V_V_dout,
        intermediate_5_V_V_empty_n,
        intermediate_5_V_V_read,
        intermediate_6_V_V_dout,
        intermediate_6_V_V_empty_n,
        intermediate_6_V_V_read,
        intermediate_7_V_V_dout,
        intermediate_7_V_V_empty_n,
        intermediate_7_V_V_read,
        intermediate_8_V_V_dout,
        intermediate_8_V_V_empty_n,
        intermediate_8_V_V_read,
        intermediate_9_V_V_dout,
        intermediate_9_V_V_empty_n,
        intermediate_9_V_V_read,
        maxpool_0_V_V_din,
        maxpool_0_V_V_full_n,
        maxpool_0_V_V_write,
        maxpool_1_V_V_din,
        maxpool_1_V_V_full_n,
        maxpool_1_V_V_write,
        maxpool_2_V_V_din,
        maxpool_2_V_V_full_n,
        maxpool_2_V_V_write,
        maxpool_3_V_V_din,
        maxpool_3_V_V_full_n,
        maxpool_3_V_V_write,
        maxpool_4_V_V_din,
        maxpool_4_V_V_full_n,
        maxpool_4_V_V_write,
        maxpool_5_V_V_din,
        maxpool_5_V_V_full_n,
        maxpool_5_V_V_write,
        maxpool_6_V_V_din,
        maxpool_6_V_V_full_n,
        maxpool_6_V_V_write,
        maxpool_7_V_V_din,
        maxpool_7_V_V_full_n,
        maxpool_7_V_V_write,
        maxpool_8_V_V_din,
        maxpool_8_V_V_full_n,
        maxpool_8_V_V_write,
        maxpool_9_V_V_din,
        maxpool_9_V_V_full_n,
        maxpool_9_V_V_write,
        Layer1_BiasArray_V_Addr_A,
        Layer1_BiasArray_V_EN_A,
        Layer1_BiasArray_V_WEN_A,
        Layer1_BiasArray_V_Din_A,
        Layer1_BiasArray_V_Dout_A,
        Layer1_WeightArray_V_Addr_A,
        Layer1_WeightArray_V_EN_A,
        Layer1_WeightArray_V_WEN_A,
        Layer1_WeightArray_V_Din_A,
        Layer1_WeightArray_V_Dout_A
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_pp0_stage0 = 7'd8;
parameter    ap_ST_fsm_state6 = 7'd16;
parameter    ap_ST_fsm_pp1_stage0 = 7'd32;
parameter    ap_ST_fsm_state28 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [17:0] intermediate_0_V_V_dout;
input   intermediate_0_V_V_empty_n;
output   intermediate_0_V_V_read;
input  [17:0] intermediate_1_V_V_dout;
input   intermediate_1_V_V_empty_n;
output   intermediate_1_V_V_read;
input  [17:0] intermediate_2_V_V_dout;
input   intermediate_2_V_V_empty_n;
output   intermediate_2_V_V_read;
input  [17:0] intermediate_3_V_V_dout;
input   intermediate_3_V_V_empty_n;
output   intermediate_3_V_V_read;
input  [17:0] intermediate_4_V_V_dout;
input   intermediate_4_V_V_empty_n;
output   intermediate_4_V_V_read;
input  [17:0] intermediate_5_V_V_dout;
input   intermediate_5_V_V_empty_n;
output   intermediate_5_V_V_read;
input  [17:0] intermediate_6_V_V_dout;
input   intermediate_6_V_V_empty_n;
output   intermediate_6_V_V_read;
input  [17:0] intermediate_7_V_V_dout;
input   intermediate_7_V_V_empty_n;
output   intermediate_7_V_V_read;
input  [17:0] intermediate_8_V_V_dout;
input   intermediate_8_V_V_empty_n;
output   intermediate_8_V_V_read;
input  [17:0] intermediate_9_V_V_dout;
input   intermediate_9_V_V_empty_n;
output   intermediate_9_V_V_read;
output  [17:0] maxpool_0_V_V_din;
input   maxpool_0_V_V_full_n;
output   maxpool_0_V_V_write;
output  [17:0] maxpool_1_V_V_din;
input   maxpool_1_V_V_full_n;
output   maxpool_1_V_V_write;
output  [17:0] maxpool_2_V_V_din;
input   maxpool_2_V_V_full_n;
output   maxpool_2_V_V_write;
output  [17:0] maxpool_3_V_V_din;
input   maxpool_3_V_V_full_n;
output   maxpool_3_V_V_write;
output  [17:0] maxpool_4_V_V_din;
input   maxpool_4_V_V_full_n;
output   maxpool_4_V_V_write;
output  [17:0] maxpool_5_V_V_din;
input   maxpool_5_V_V_full_n;
output   maxpool_5_V_V_write;
output  [17:0] maxpool_6_V_V_din;
input   maxpool_6_V_V_full_n;
output   maxpool_6_V_V_write;
output  [17:0] maxpool_7_V_V_din;
input   maxpool_7_V_V_full_n;
output   maxpool_7_V_V_write;
output  [17:0] maxpool_8_V_V_din;
input   maxpool_8_V_V_full_n;
output   maxpool_8_V_V_write;
output  [17:0] maxpool_9_V_V_din;
input   maxpool_9_V_V_full_n;
output   maxpool_9_V_V_write;
output  [31:0] Layer1_BiasArray_V_Addr_A;
output   Layer1_BiasArray_V_EN_A;
output  [3:0] Layer1_BiasArray_V_WEN_A;
output  [31:0] Layer1_BiasArray_V_Din_A;
input  [31:0] Layer1_BiasArray_V_Dout_A;
output  [31:0] Layer1_WeightArray_V_Addr_A;
output   Layer1_WeightArray_V_EN_A;
output  [3:0] Layer1_WeightArray_V_WEN_A;
output  [31:0] Layer1_WeightArray_V_Din_A;
input  [31:0] Layer1_WeightArray_V_Dout_A;

reg ap_done;
reg ap_idle;
reg start_write;
reg intermediate_0_V_V_read;
reg intermediate_1_V_V_read;
reg intermediate_2_V_V_read;
reg intermediate_3_V_V_read;
reg intermediate_4_V_V_read;
reg intermediate_5_V_V_read;
reg intermediate_6_V_V_read;
reg intermediate_7_V_V_read;
reg intermediate_8_V_V_read;
reg intermediate_9_V_V_read;
reg maxpool_0_V_V_write;
reg maxpool_1_V_V_write;
reg maxpool_2_V_V_write;
reg maxpool_3_V_V_write;
reg maxpool_4_V_V_write;
reg maxpool_5_V_V_write;
reg maxpool_6_V_V_write;
reg maxpool_7_V_V_write;
reg maxpool_8_V_V_write;
reg maxpool_9_V_V_write;
reg Layer1_BiasArray_V_EN_A;
reg Layer1_WeightArray_V_EN_A;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    intermediate_0_V_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_i_i_reg_1369;
reg   [3:0] i_0_i_reg_476;
reg    intermediate_1_V_V_blk_n;
reg    intermediate_2_V_V_blk_n;
reg    intermediate_3_V_V_blk_n;
reg    intermediate_4_V_V_blk_n;
reg    intermediate_5_V_V_blk_n;
reg    intermediate_6_V_V_blk_n;
reg    intermediate_7_V_V_blk_n;
reg    intermediate_8_V_V_blk_n;
reg    intermediate_9_V_V_blk_n;
reg    maxpool_0_V_V_blk_n;
reg    ap_enable_reg_pp1_iter20;
reg   [0:0] tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter19_tmp_30_reg_1378;
reg    maxpool_1_V_V_blk_n;
reg    maxpool_2_V_V_blk_n;
reg    maxpool_3_V_V_blk_n;
reg    maxpool_4_V_V_blk_n;
reg    maxpool_5_V_V_blk_n;
reg    maxpool_6_V_V_blk_n;
reg    maxpool_7_V_V_blk_n;
reg    maxpool_8_V_V_blk_n;
reg    maxpool_9_V_V_blk_n;
reg   [4:0] i_0_i_i_reg_500;
reg   [7:0] i1_0_i_i_reg_512;
reg   [17:0] windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_35_reg_523;
wire    ap_block_state7_pp1_stage0_iter0;
reg    ap_predicate_op191_read_state8;
reg    ap_predicate_op193_read_state8;
reg    ap_predicate_op195_read_state8;
reg    ap_predicate_op197_read_state8;
reg    ap_predicate_op199_read_state8;
reg    ap_predicate_op201_read_state8;
reg    ap_predicate_op203_read_state8;
reg    ap_predicate_op205_read_state8;
reg    ap_predicate_op207_read_state8;
reg    ap_predicate_op209_read_state8;
reg    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_state9_pp1_stage0_iter2;
wire    ap_block_state10_pp1_stage0_iter3;
wire    ap_block_state11_pp1_stage0_iter4;
wire    ap_block_state12_pp1_stage0_iter5;
wire    ap_block_state13_pp1_stage0_iter6;
wire    ap_block_state14_pp1_stage0_iter7;
wire    ap_block_state15_pp1_stage0_iter8;
wire    ap_block_state16_pp1_stage0_iter9;
wire    ap_block_state17_pp1_stage0_iter10;
wire    ap_block_state18_pp1_stage0_iter11;
wire    ap_block_state19_pp1_stage0_iter12;
wire    ap_block_state20_pp1_stage0_iter13;
wire    ap_block_state21_pp1_stage0_iter14;
wire    ap_block_state22_pp1_stage0_iter15;
wire    ap_block_state23_pp1_stage0_iter16;
wire    ap_block_state24_pp1_stage0_iter17;
wire    ap_block_state25_pp1_stage0_iter18;
wire    ap_block_state26_pp1_stage0_iter19;
reg    ap_predicate_op285_write_state27;
reg    ap_predicate_op286_write_state27;
reg    ap_predicate_op287_write_state27;
reg    ap_predicate_op288_write_state27;
reg    ap_predicate_op289_write_state27;
reg    ap_predicate_op290_write_state27;
reg    ap_predicate_op291_write_state27;
reg    ap_predicate_op292_write_state27;
reg    ap_predicate_op293_write_state27;
reg    ap_predicate_op294_write_state27;
reg    ap_block_state27_pp1_stage0_iter20;
reg    ap_block_pp1_stage0_11001;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter6_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter7_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter8_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter9_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter10_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter11_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter12_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter13_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter14_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter15_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter16_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter17_windows_filter_val_0_35_reg_523;
reg   [17:0] ap_reg_pp1_iter18_windows_filter_val_0_35_reg_523;
wire   [7:0] next_mul_fu_693_p2;
reg   [7:0] next_mul_reg_1332;
wire    ap_CS_fsm_state2;
wire   [3:0] i_3_fu_705_p2;
reg   [3:0] i_3_reg_1340;
wire   [0:0] exitcond_i_fu_699_p2;
reg   [17:0] sum_V_reg_1350;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond11_i_i_fu_716_p2;
reg   [0:0] exitcond11_i_i_reg_1355;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] i_fu_722_p2;
reg   [4:0] i_reg_1359;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_i_i_fu_838_p2;
wire   [7:0] i_4_fu_844_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] tmp_30_fu_850_p2;
reg   [0:0] ap_reg_pp1_iter1_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter2_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter3_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter4_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter5_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter6_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter7_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter8_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter9_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter10_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter11_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter12_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter13_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter14_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter15_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter16_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter17_tmp_30_reg_1378;
reg   [0:0] ap_reg_pp1_iter18_tmp_30_reg_1378;
reg   [17:0] windows_filter_val_0_18_reg_1382;
reg   [17:0] windows_filter_val_0_19_reg_1387;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_19_reg_1387;
reg   [17:0] windows_filter_val_0_20_reg_1392;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_20_reg_1392;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_20_reg_1392;
reg   [17:0] windows_filter_val_0_21_reg_1397;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_21_reg_1397;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_21_reg_1397;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_21_reg_1397;
reg   [17:0] windows_filter_val_0_22_reg_1402;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_22_reg_1402;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_22_reg_1402;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_22_reg_1402;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_22_reg_1402;
reg   [17:0] windows_filter_val_0_23_reg_1407;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_23_reg_1407;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_23_reg_1407;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_23_reg_1407;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_23_reg_1407;
reg   [17:0] ap_reg_pp1_iter6_windows_filter_val_0_23_reg_1407;
reg   [17:0] windows_filter_val_0_24_reg_1412;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_24_reg_1412;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_24_reg_1412;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_24_reg_1412;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_24_reg_1412;
reg   [17:0] ap_reg_pp1_iter6_windows_filter_val_0_24_reg_1412;
reg   [17:0] ap_reg_pp1_iter7_windows_filter_val_0_24_reg_1412;
reg   [17:0] windows_filter_val_0_25_reg_1417;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_25_reg_1417;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_25_reg_1417;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_25_reg_1417;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_25_reg_1417;
reg   [17:0] ap_reg_pp1_iter6_windows_filter_val_0_25_reg_1417;
reg   [17:0] ap_reg_pp1_iter7_windows_filter_val_0_25_reg_1417;
reg   [17:0] ap_reg_pp1_iter8_windows_filter_val_0_25_reg_1417;
reg   [17:0] windows_filter_val_0_26_reg_1422;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_26_reg_1422;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_26_reg_1422;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_26_reg_1422;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_26_reg_1422;
reg   [17:0] ap_reg_pp1_iter6_windows_filter_val_0_26_reg_1422;
reg   [17:0] ap_reg_pp1_iter7_windows_filter_val_0_26_reg_1422;
reg   [17:0] ap_reg_pp1_iter8_windows_filter_val_0_26_reg_1422;
reg   [17:0] ap_reg_pp1_iter9_windows_filter_val_0_26_reg_1422;
reg   [17:0] windows_filter_val_0_27_reg_1427;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_27_reg_1427;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_27_reg_1427;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_27_reg_1427;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_27_reg_1427;
reg   [17:0] ap_reg_pp1_iter6_windows_filter_val_0_27_reg_1427;
reg   [17:0] ap_reg_pp1_iter7_windows_filter_val_0_27_reg_1427;
reg   [17:0] ap_reg_pp1_iter8_windows_filter_val_0_27_reg_1427;
reg   [17:0] ap_reg_pp1_iter9_windows_filter_val_0_27_reg_1427;
reg   [17:0] ap_reg_pp1_iter10_windows_filter_val_0_27_reg_1427;
reg   [17:0] windows_filter_val_0_28_reg_1432;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_28_reg_1432;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_28_reg_1432;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_28_reg_1432;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_28_reg_1432;
reg   [17:0] ap_reg_pp1_iter6_windows_filter_val_0_28_reg_1432;
reg   [17:0] ap_reg_pp1_iter7_windows_filter_val_0_28_reg_1432;
reg   [17:0] ap_reg_pp1_iter8_windows_filter_val_0_28_reg_1432;
reg   [17:0] ap_reg_pp1_iter9_windows_filter_val_0_28_reg_1432;
reg   [17:0] ap_reg_pp1_iter10_windows_filter_val_0_28_reg_1432;
reg   [17:0] ap_reg_pp1_iter11_windows_filter_val_0_28_reg_1432;
reg   [17:0] windows_filter_val_0_29_reg_1437;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_29_reg_1437;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_29_reg_1437;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_29_reg_1437;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_29_reg_1437;
reg   [17:0] ap_reg_pp1_iter6_windows_filter_val_0_29_reg_1437;
reg   [17:0] ap_reg_pp1_iter7_windows_filter_val_0_29_reg_1437;
reg   [17:0] ap_reg_pp1_iter8_windows_filter_val_0_29_reg_1437;
reg   [17:0] ap_reg_pp1_iter9_windows_filter_val_0_29_reg_1437;
reg   [17:0] ap_reg_pp1_iter10_windows_filter_val_0_29_reg_1437;
reg   [17:0] ap_reg_pp1_iter11_windows_filter_val_0_29_reg_1437;
reg   [17:0] ap_reg_pp1_iter12_windows_filter_val_0_29_reg_1437;
reg   [17:0] windows_filter_val_0_30_reg_1442;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_30_reg_1442;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_30_reg_1442;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_30_reg_1442;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_30_reg_1442;
reg   [17:0] ap_reg_pp1_iter6_windows_filter_val_0_30_reg_1442;
reg   [17:0] ap_reg_pp1_iter7_windows_filter_val_0_30_reg_1442;
reg   [17:0] ap_reg_pp1_iter8_windows_filter_val_0_30_reg_1442;
reg   [17:0] ap_reg_pp1_iter9_windows_filter_val_0_30_reg_1442;
reg   [17:0] ap_reg_pp1_iter10_windows_filter_val_0_30_reg_1442;
reg   [17:0] ap_reg_pp1_iter11_windows_filter_val_0_30_reg_1442;
reg   [17:0] ap_reg_pp1_iter12_windows_filter_val_0_30_reg_1442;
reg   [17:0] ap_reg_pp1_iter13_windows_filter_val_0_30_reg_1442;
reg   [17:0] windows_filter_val_0_31_reg_1447;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_31_reg_1447;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_31_reg_1447;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_31_reg_1447;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_31_reg_1447;
reg   [17:0] ap_reg_pp1_iter6_windows_filter_val_0_31_reg_1447;
reg   [17:0] ap_reg_pp1_iter7_windows_filter_val_0_31_reg_1447;
reg   [17:0] ap_reg_pp1_iter8_windows_filter_val_0_31_reg_1447;
reg   [17:0] ap_reg_pp1_iter9_windows_filter_val_0_31_reg_1447;
reg   [17:0] ap_reg_pp1_iter10_windows_filter_val_0_31_reg_1447;
reg   [17:0] ap_reg_pp1_iter11_windows_filter_val_0_31_reg_1447;
reg   [17:0] ap_reg_pp1_iter12_windows_filter_val_0_31_reg_1447;
reg   [17:0] ap_reg_pp1_iter13_windows_filter_val_0_31_reg_1447;
reg   [17:0] ap_reg_pp1_iter14_windows_filter_val_0_31_reg_1447;
reg   [17:0] windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter6_windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter7_windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter8_windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter9_windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter10_windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter11_windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter12_windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter13_windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter14_windows_filter_val_0_32_reg_1452;
reg   [17:0] ap_reg_pp1_iter15_windows_filter_val_0_32_reg_1452;
reg   [17:0] windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter6_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter7_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter8_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter9_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter10_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter11_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter12_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter13_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter14_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter15_windows_filter_val_0_33_reg_1457;
reg   [17:0] ap_reg_pp1_iter16_windows_filter_val_0_33_reg_1457;
reg   [17:0] windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter2_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter3_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter4_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter5_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter6_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter7_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter8_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter9_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter10_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter11_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter12_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter13_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter14_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter15_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter16_windows_filter_val_0_34_reg_1462;
reg   [17:0] ap_reg_pp1_iter17_windows_filter_val_0_34_reg_1462;
wire   [17:0] sum_V_1_mult_add_fu_559_ap_return;
reg   [17:0] sum_V_1_reg_1467;
wire   [17:0] sum_V_2_mult_add_fu_566_ap_return;
reg   [17:0] sum_V_2_reg_1472;
wire   [17:0] sum_V_3_mult_add_fu_573_ap_return;
reg   [17:0] sum_V_3_reg_1477;
wire   [17:0] sum_V_4_mult_add_fu_580_ap_return;
reg   [17:0] sum_V_4_reg_1482;
wire   [17:0] sum_V_5_mult_add_fu_587_ap_return;
reg   [17:0] sum_V_5_reg_1487;
wire   [17:0] sum_V_6_mult_add_fu_594_ap_return;
reg   [17:0] sum_V_6_reg_1492;
wire   [17:0] sum_V_7_mult_add_fu_601_ap_return;
reg   [17:0] sum_V_7_reg_1497;
wire   [17:0] sum_V_8_mult_add_fu_608_ap_return;
reg   [17:0] sum_V_8_reg_1502;
wire   [17:0] sum_V_9_mult_add_fu_615_ap_return;
reg   [17:0] sum_V_9_reg_1507;
wire   [17:0] sum_V_10_mult_add_fu_622_ap_return;
reg   [17:0] sum_V_10_reg_1512;
wire   [17:0] sum_V_11_mult_add_fu_629_ap_return;
reg   [17:0] sum_V_11_reg_1517;
wire   [17:0] sum_V_12_mult_add_fu_636_ap_return;
reg   [17:0] sum_V_12_reg_1522;
wire   [17:0] sum_V_13_mult_add_fu_643_ap_return;
reg   [17:0] sum_V_13_reg_1527;
wire   [17:0] sum_V_14_mult_add_fu_650_ap_return;
reg   [17:0] sum_V_14_reg_1532;
wire   [17:0] sum_V_15_mult_add_fu_657_ap_return;
reg   [17:0] sum_V_15_reg_1537;
wire   [17:0] sum_V_16_mult_add_fu_664_ap_return;
reg   [17:0] sum_V_16_reg_1542;
wire   [17:0] sum_V_17_mult_add_fu_671_ap_return;
reg   [17:0] sum_V_17_reg_1547;
wire   [17:0] sum_V_18_mult_add_fu_678_ap_return;
reg   [17:0] sum_V_18_reg_1552;
wire   [16:0] tmp_V_49_fu_1089_p3;
reg   [16:0] tmp_V_49_reg_1557;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_enable_reg_pp1_iter2;
reg    ap_condition_pp1_exit_iter1_state8;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter17;
reg    ap_enable_reg_pp1_iter18;
reg    ap_enable_reg_pp1_iter19;
wire    sum_V_1_mult_add_fu_559_ap_ready;
wire    sum_V_2_mult_add_fu_566_ap_ready;
wire    sum_V_3_mult_add_fu_573_ap_ready;
wire    sum_V_4_mult_add_fu_580_ap_ready;
wire    sum_V_5_mult_add_fu_587_ap_ready;
wire    sum_V_6_mult_add_fu_594_ap_ready;
wire    sum_V_7_mult_add_fu_601_ap_ready;
wire    sum_V_8_mult_add_fu_608_ap_ready;
wire    sum_V_9_mult_add_fu_615_ap_ready;
wire    sum_V_10_mult_add_fu_622_ap_ready;
wire    sum_V_11_mult_add_fu_629_ap_ready;
wire    sum_V_12_mult_add_fu_636_ap_ready;
wire    sum_V_13_mult_add_fu_643_ap_ready;
wire    sum_V_14_mult_add_fu_650_ap_ready;
wire    sum_V_15_mult_add_fu_657_ap_ready;
wire    sum_V_16_mult_add_fu_664_ap_ready;
wire    sum_V_17_mult_add_fu_671_ap_ready;
wire    sum_V_18_mult_add_fu_678_ap_ready;
wire    sum_V_20_mult_add_fu_685_ap_ready;
wire   [17:0] sum_V_20_mult_add_fu_685_ap_return;
reg    ap_block_state1;
wire    ap_CS_fsm_state28;
reg   [7:0] phi_mul_reg_488;
reg   [4:0] ap_phi_mux_i_0_i_i_phi_fu_504_p4;
wire    ap_block_pp0_stage0;
reg   [17:0] ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20;
wire   [17:0] ap_phi_reg_pp1_iter1_windows_filter_val_0_35_reg_523;
wire   [63:0] tmp_fu_711_p1;
wire   [63:0] tmp_93_cast_fu_738_p1;
wire   [17:0] tmp_V_1_fu_1097_p1;
reg    ap_block_pp1_stage0_01001;
reg   [17:0] weight_in_V_1_18_s_fu_174;
reg   [17:0] weight_in_V_1_17_s_fu_178;
reg   [17:0] weight_in_V_1_16_s_fu_182;
reg   [17:0] weight_in_V_1_15_s_fu_186;
reg   [17:0] weight_in_V_1_14_s_fu_190;
reg   [17:0] windows_filter_val_0_fu_194;
reg   [17:0] windows_filter_val_0_1_fu_198;
reg   [17:0] windows_filter_val_0_2_fu_202;
reg   [17:0] windows_filter_val_0_3_fu_206;
reg   [17:0] windows_filter_val_0_4_fu_210;
reg   [17:0] windows_filter_val_0_5_fu_214;
reg   [17:0] windows_filter_val_0_6_fu_218;
reg   [17:0] windows_filter_val_0_7_fu_222;
reg   [17:0] windows_filter_val_0_8_fu_226;
reg   [17:0] windows_filter_val_0_9_fu_230;
reg   [17:0] windows_filter_val_0_10_fu_234;
reg   [17:0] windows_filter_val_0_11_fu_238;
reg   [17:0] windows_filter_val_0_12_fu_242;
reg   [17:0] windows_filter_val_0_13_fu_246;
reg   [17:0] windows_filter_val_0_14_fu_250;
reg   [17:0] windows_filter_val_0_15_fu_254;
reg   [17:0] windows_filter_val_0_16_fu_258;
reg   [17:0] windows_filter_val_0_17_fu_262;
reg   [17:0] weight_in_V_1_0_s_fu_266;
reg   [17:0] weight_in_V_1_1_s_fu_270;
reg   [17:0] weight_in_V_1_2_s_fu_274;
reg   [17:0] weight_in_V_1_3_s_fu_278;
reg   [17:0] weight_in_V_1_4_s_fu_282;
reg   [17:0] weight_in_V_1_5_s_fu_286;
reg   [17:0] weight_in_V_1_6_s_fu_290;
reg   [17:0] weight_in_V_1_7_s_fu_294;
reg   [17:0] weight_in_V_1_8_s_fu_298;
reg   [17:0] weight_in_V_1_9_s_fu_302;
reg   [17:0] weight_in_V_1_10_s_fu_306;
reg   [17:0] weight_in_V_1_11_s_fu_310;
reg   [17:0] weight_in_V_1_12_s_fu_314;
reg   [17:0] weight_in_V_1_13_s_fu_318;
wire   [31:0] Layer1_BiasArray_V_Addr_A_orig;
wire   [31:0] Layer1_WeightArray_V_Addr_A_orig;
wire   [7:0] tmp_cast_fu_728_p1;
wire   [7:0] tmp_s_fu_732_p2;
wire   [0:0] tmp_153_fu_1081_p3;
wire   [16:0] tmp_152_fu_1077_p1;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_261;
reg    ap_condition_1421;
reg    ap_condition_217;
reg    ap_condition_942;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
#0 ap_enable_reg_pp1_iter19 = 1'b0;
end

mult_add sum_V_1_mult_add_fu_559(
    .ap_ready(sum_V_1_mult_add_fu_559_ap_ready),
    .in_V(windows_filter_val_0_fu_194),
    .weight_V(weight_in_V_1_0_s_fu_266),
    .add_V(sum_V_reg_1350),
    .ap_return(sum_V_1_mult_add_fu_559_ap_return)
);

mult_add sum_V_2_mult_add_fu_566(
    .ap_ready(sum_V_2_mult_add_fu_566_ap_ready),
    .in_V(windows_filter_val_0_18_reg_1382),
    .weight_V(weight_in_V_1_1_s_fu_270),
    .add_V(sum_V_1_reg_1467),
    .ap_return(sum_V_2_mult_add_fu_566_ap_return)
);

mult_add sum_V_3_mult_add_fu_573(
    .ap_ready(sum_V_3_mult_add_fu_573_ap_ready),
    .in_V(ap_reg_pp1_iter2_windows_filter_val_0_19_reg_1387),
    .weight_V(weight_in_V_1_2_s_fu_274),
    .add_V(sum_V_2_reg_1472),
    .ap_return(sum_V_3_mult_add_fu_573_ap_return)
);

mult_add sum_V_4_mult_add_fu_580(
    .ap_ready(sum_V_4_mult_add_fu_580_ap_ready),
    .in_V(ap_reg_pp1_iter3_windows_filter_val_0_20_reg_1392),
    .weight_V(weight_in_V_1_3_s_fu_278),
    .add_V(sum_V_3_reg_1477),
    .ap_return(sum_V_4_mult_add_fu_580_ap_return)
);

mult_add sum_V_5_mult_add_fu_587(
    .ap_ready(sum_V_5_mult_add_fu_587_ap_ready),
    .in_V(ap_reg_pp1_iter4_windows_filter_val_0_21_reg_1397),
    .weight_V(weight_in_V_1_4_s_fu_282),
    .add_V(sum_V_4_reg_1482),
    .ap_return(sum_V_5_mult_add_fu_587_ap_return)
);

mult_add sum_V_6_mult_add_fu_594(
    .ap_ready(sum_V_6_mult_add_fu_594_ap_ready),
    .in_V(ap_reg_pp1_iter5_windows_filter_val_0_22_reg_1402),
    .weight_V(weight_in_V_1_5_s_fu_286),
    .add_V(sum_V_5_reg_1487),
    .ap_return(sum_V_6_mult_add_fu_594_ap_return)
);

mult_add sum_V_7_mult_add_fu_601(
    .ap_ready(sum_V_7_mult_add_fu_601_ap_ready),
    .in_V(ap_reg_pp1_iter6_windows_filter_val_0_23_reg_1407),
    .weight_V(weight_in_V_1_6_s_fu_290),
    .add_V(sum_V_6_reg_1492),
    .ap_return(sum_V_7_mult_add_fu_601_ap_return)
);

mult_add sum_V_8_mult_add_fu_608(
    .ap_ready(sum_V_8_mult_add_fu_608_ap_ready),
    .in_V(ap_reg_pp1_iter7_windows_filter_val_0_24_reg_1412),
    .weight_V(weight_in_V_1_7_s_fu_294),
    .add_V(sum_V_7_reg_1497),
    .ap_return(sum_V_8_mult_add_fu_608_ap_return)
);

mult_add sum_V_9_mult_add_fu_615(
    .ap_ready(sum_V_9_mult_add_fu_615_ap_ready),
    .in_V(ap_reg_pp1_iter8_windows_filter_val_0_25_reg_1417),
    .weight_V(weight_in_V_1_8_s_fu_298),
    .add_V(sum_V_8_reg_1502),
    .ap_return(sum_V_9_mult_add_fu_615_ap_return)
);

mult_add sum_V_10_mult_add_fu_622(
    .ap_ready(sum_V_10_mult_add_fu_622_ap_ready),
    .in_V(ap_reg_pp1_iter9_windows_filter_val_0_26_reg_1422),
    .weight_V(weight_in_V_1_9_s_fu_302),
    .add_V(sum_V_9_reg_1507),
    .ap_return(sum_V_10_mult_add_fu_622_ap_return)
);

mult_add sum_V_11_mult_add_fu_629(
    .ap_ready(sum_V_11_mult_add_fu_629_ap_ready),
    .in_V(ap_reg_pp1_iter10_windows_filter_val_0_27_reg_1427),
    .weight_V(weight_in_V_1_10_s_fu_306),
    .add_V(sum_V_10_reg_1512),
    .ap_return(sum_V_11_mult_add_fu_629_ap_return)
);

mult_add sum_V_12_mult_add_fu_636(
    .ap_ready(sum_V_12_mult_add_fu_636_ap_ready),
    .in_V(ap_reg_pp1_iter11_windows_filter_val_0_28_reg_1432),
    .weight_V(weight_in_V_1_11_s_fu_310),
    .add_V(sum_V_11_reg_1517),
    .ap_return(sum_V_12_mult_add_fu_636_ap_return)
);

mult_add sum_V_13_mult_add_fu_643(
    .ap_ready(sum_V_13_mult_add_fu_643_ap_ready),
    .in_V(ap_reg_pp1_iter12_windows_filter_val_0_29_reg_1437),
    .weight_V(weight_in_V_1_12_s_fu_314),
    .add_V(sum_V_12_reg_1522),
    .ap_return(sum_V_13_mult_add_fu_643_ap_return)
);

mult_add sum_V_14_mult_add_fu_650(
    .ap_ready(sum_V_14_mult_add_fu_650_ap_ready),
    .in_V(ap_reg_pp1_iter13_windows_filter_val_0_30_reg_1442),
    .weight_V(weight_in_V_1_13_s_fu_318),
    .add_V(sum_V_13_reg_1527),
    .ap_return(sum_V_14_mult_add_fu_650_ap_return)
);

mult_add sum_V_15_mult_add_fu_657(
    .ap_ready(sum_V_15_mult_add_fu_657_ap_ready),
    .in_V(ap_reg_pp1_iter14_windows_filter_val_0_31_reg_1447),
    .weight_V(weight_in_V_1_14_s_fu_190),
    .add_V(sum_V_14_reg_1532),
    .ap_return(sum_V_15_mult_add_fu_657_ap_return)
);

mult_add sum_V_16_mult_add_fu_664(
    .ap_ready(sum_V_16_mult_add_fu_664_ap_ready),
    .in_V(ap_reg_pp1_iter15_windows_filter_val_0_32_reg_1452),
    .weight_V(weight_in_V_1_15_s_fu_186),
    .add_V(sum_V_15_reg_1537),
    .ap_return(sum_V_16_mult_add_fu_664_ap_return)
);

mult_add sum_V_17_mult_add_fu_671(
    .ap_ready(sum_V_17_mult_add_fu_671_ap_ready),
    .in_V(ap_reg_pp1_iter16_windows_filter_val_0_33_reg_1457),
    .weight_V(weight_in_V_1_16_s_fu_182),
    .add_V(sum_V_16_reg_1542),
    .ap_return(sum_V_17_mult_add_fu_671_ap_return)
);

mult_add sum_V_18_mult_add_fu_678(
    .ap_ready(sum_V_18_mult_add_fu_678_ap_ready),
    .in_V(ap_reg_pp1_iter17_windows_filter_val_0_34_reg_1462),
    .weight_V(weight_in_V_1_17_s_fu_178),
    .add_V(sum_V_17_reg_1547),
    .ap_return(sum_V_18_mult_add_fu_678_ap_return)
);

mult_add sum_V_20_mult_add_fu_685(
    .ap_ready(sum_V_20_mult_add_fu_685_ap_ready),
    .in_V(ap_reg_pp1_iter18_windows_filter_val_0_35_reg_523),
    .weight_V(weight_in_V_1_18_s_fu_174),
    .add_V(sum_V_18_reg_1552),
    .ap_return(sum_V_20_mult_add_fu_685_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond_i_fu_699_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_i_i_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter1_state8)) begin
                ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp1_iter20 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i1_0_i_i_reg_512 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_i_fu_838_p2 == 1'd0))) begin
        i1_0_i_i_reg_512 <= i_4_fu_844_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond11_i_i_reg_1355 == 1'd0))) begin
        i_0_i_i_reg_500 <= i_reg_1359;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_i_i_reg_500 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        i_0_i_reg_476 <= i_3_reg_1340;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_476 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        phi_mul_reg_488 <= next_mul_reg_1332;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_488 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_942)) begin
        if (((i_0_i_reg_476 == 4'd0) & (exitcond_i_i_reg_1369 == 1'd0))) begin
            windows_filter_val_0_35_reg_523 <= intermediate_0_V_V_dout;
        end else if (((i_0_i_reg_476 == 4'd1) & (exitcond_i_i_reg_1369 == 1'd0))) begin
            windows_filter_val_0_35_reg_523 <= intermediate_1_V_V_dout;
        end else if (((i_0_i_reg_476 == 4'd2) & (exitcond_i_i_reg_1369 == 1'd0))) begin
            windows_filter_val_0_35_reg_523 <= intermediate_2_V_V_dout;
        end else if (((i_0_i_reg_476 == 4'd3) & (exitcond_i_i_reg_1369 == 1'd0))) begin
            windows_filter_val_0_35_reg_523 <= intermediate_3_V_V_dout;
        end else if (((i_0_i_reg_476 == 4'd4) & (exitcond_i_i_reg_1369 == 1'd0))) begin
            windows_filter_val_0_35_reg_523 <= intermediate_4_V_V_dout;
        end else if (((i_0_i_reg_476 == 4'd5) & (exitcond_i_i_reg_1369 == 1'd0))) begin
            windows_filter_val_0_35_reg_523 <= intermediate_5_V_V_dout;
        end else if (((i_0_i_reg_476 == 4'd6) & (exitcond_i_i_reg_1369 == 1'd0))) begin
            windows_filter_val_0_35_reg_523 <= intermediate_6_V_V_dout;
        end else if (((i_0_i_reg_476 == 4'd7) & (exitcond_i_i_reg_1369 == 1'd0))) begin
            windows_filter_val_0_35_reg_523 <= intermediate_7_V_V_dout;
        end else if (((i_0_i_reg_476 == 4'd8) & (exitcond_i_i_reg_1369 == 1'd0))) begin
            windows_filter_val_0_35_reg_523 <= intermediate_8_V_V_dout;
        end else if ((1'b1 == ap_condition_217)) begin
            windows_filter_val_0_35_reg_523 <= intermediate_9_V_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            windows_filter_val_0_35_reg_523 <= ap_phi_reg_pp1_iter1_windows_filter_val_0_35_reg_523;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        ap_reg_pp1_iter10_tmp_30_reg_1378 <= ap_reg_pp1_iter9_tmp_30_reg_1378;
        ap_reg_pp1_iter10_windows_filter_val_0_27_reg_1427 <= ap_reg_pp1_iter9_windows_filter_val_0_27_reg_1427;
        ap_reg_pp1_iter10_windows_filter_val_0_28_reg_1432 <= ap_reg_pp1_iter9_windows_filter_val_0_28_reg_1432;
        ap_reg_pp1_iter10_windows_filter_val_0_29_reg_1437 <= ap_reg_pp1_iter9_windows_filter_val_0_29_reg_1437;
        ap_reg_pp1_iter10_windows_filter_val_0_30_reg_1442 <= ap_reg_pp1_iter9_windows_filter_val_0_30_reg_1442;
        ap_reg_pp1_iter10_windows_filter_val_0_31_reg_1447 <= ap_reg_pp1_iter9_windows_filter_val_0_31_reg_1447;
        ap_reg_pp1_iter10_windows_filter_val_0_32_reg_1452 <= ap_reg_pp1_iter9_windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter10_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter9_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter10_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter9_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter10_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter9_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter11_tmp_30_reg_1378 <= ap_reg_pp1_iter10_tmp_30_reg_1378;
        ap_reg_pp1_iter11_windows_filter_val_0_28_reg_1432 <= ap_reg_pp1_iter10_windows_filter_val_0_28_reg_1432;
        ap_reg_pp1_iter11_windows_filter_val_0_29_reg_1437 <= ap_reg_pp1_iter10_windows_filter_val_0_29_reg_1437;
        ap_reg_pp1_iter11_windows_filter_val_0_30_reg_1442 <= ap_reg_pp1_iter10_windows_filter_val_0_30_reg_1442;
        ap_reg_pp1_iter11_windows_filter_val_0_31_reg_1447 <= ap_reg_pp1_iter10_windows_filter_val_0_31_reg_1447;
        ap_reg_pp1_iter11_windows_filter_val_0_32_reg_1452 <= ap_reg_pp1_iter10_windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter11_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter10_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter11_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter10_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter11_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter10_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter12_tmp_30_reg_1378 <= ap_reg_pp1_iter11_tmp_30_reg_1378;
        ap_reg_pp1_iter12_windows_filter_val_0_29_reg_1437 <= ap_reg_pp1_iter11_windows_filter_val_0_29_reg_1437;
        ap_reg_pp1_iter12_windows_filter_val_0_30_reg_1442 <= ap_reg_pp1_iter11_windows_filter_val_0_30_reg_1442;
        ap_reg_pp1_iter12_windows_filter_val_0_31_reg_1447 <= ap_reg_pp1_iter11_windows_filter_val_0_31_reg_1447;
        ap_reg_pp1_iter12_windows_filter_val_0_32_reg_1452 <= ap_reg_pp1_iter11_windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter12_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter11_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter12_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter11_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter12_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter11_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter13_tmp_30_reg_1378 <= ap_reg_pp1_iter12_tmp_30_reg_1378;
        ap_reg_pp1_iter13_windows_filter_val_0_30_reg_1442 <= ap_reg_pp1_iter12_windows_filter_val_0_30_reg_1442;
        ap_reg_pp1_iter13_windows_filter_val_0_31_reg_1447 <= ap_reg_pp1_iter12_windows_filter_val_0_31_reg_1447;
        ap_reg_pp1_iter13_windows_filter_val_0_32_reg_1452 <= ap_reg_pp1_iter12_windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter13_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter12_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter13_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter12_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter13_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter12_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter14_tmp_30_reg_1378 <= ap_reg_pp1_iter13_tmp_30_reg_1378;
        ap_reg_pp1_iter14_windows_filter_val_0_31_reg_1447 <= ap_reg_pp1_iter13_windows_filter_val_0_31_reg_1447;
        ap_reg_pp1_iter14_windows_filter_val_0_32_reg_1452 <= ap_reg_pp1_iter13_windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter14_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter13_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter14_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter13_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter14_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter13_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter15_tmp_30_reg_1378 <= ap_reg_pp1_iter14_tmp_30_reg_1378;
        ap_reg_pp1_iter15_windows_filter_val_0_32_reg_1452 <= ap_reg_pp1_iter14_windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter15_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter14_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter15_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter14_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter15_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter14_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter16_tmp_30_reg_1378 <= ap_reg_pp1_iter15_tmp_30_reg_1378;
        ap_reg_pp1_iter16_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter15_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter16_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter15_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter16_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter15_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter17_tmp_30_reg_1378 <= ap_reg_pp1_iter16_tmp_30_reg_1378;
        ap_reg_pp1_iter17_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter16_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter17_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter16_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter18_tmp_30_reg_1378 <= ap_reg_pp1_iter17_tmp_30_reg_1378;
        ap_reg_pp1_iter18_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter17_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter19_tmp_30_reg_1378 <= ap_reg_pp1_iter18_tmp_30_reg_1378;
        ap_reg_pp1_iter2_tmp_30_reg_1378 <= ap_reg_pp1_iter1_tmp_30_reg_1378;
        ap_reg_pp1_iter2_windows_filter_val_0_19_reg_1387 <= windows_filter_val_0_19_reg_1387;
        ap_reg_pp1_iter2_windows_filter_val_0_20_reg_1392 <= windows_filter_val_0_20_reg_1392;
        ap_reg_pp1_iter2_windows_filter_val_0_21_reg_1397 <= windows_filter_val_0_21_reg_1397;
        ap_reg_pp1_iter2_windows_filter_val_0_22_reg_1402 <= windows_filter_val_0_22_reg_1402;
        ap_reg_pp1_iter2_windows_filter_val_0_23_reg_1407 <= windows_filter_val_0_23_reg_1407;
        ap_reg_pp1_iter2_windows_filter_val_0_24_reg_1412 <= windows_filter_val_0_24_reg_1412;
        ap_reg_pp1_iter2_windows_filter_val_0_25_reg_1417 <= windows_filter_val_0_25_reg_1417;
        ap_reg_pp1_iter2_windows_filter_val_0_26_reg_1422 <= windows_filter_val_0_26_reg_1422;
        ap_reg_pp1_iter2_windows_filter_val_0_27_reg_1427 <= windows_filter_val_0_27_reg_1427;
        ap_reg_pp1_iter2_windows_filter_val_0_28_reg_1432 <= windows_filter_val_0_28_reg_1432;
        ap_reg_pp1_iter2_windows_filter_val_0_29_reg_1437 <= windows_filter_val_0_29_reg_1437;
        ap_reg_pp1_iter2_windows_filter_val_0_30_reg_1442 <= windows_filter_val_0_30_reg_1442;
        ap_reg_pp1_iter2_windows_filter_val_0_31_reg_1447 <= windows_filter_val_0_31_reg_1447;
        ap_reg_pp1_iter2_windows_filter_val_0_32_reg_1452 <= windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter2_windows_filter_val_0_33_reg_1457 <= windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter2_windows_filter_val_0_34_reg_1462 <= windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter2_windows_filter_val_0_35_reg_523 <= windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter3_tmp_30_reg_1378 <= ap_reg_pp1_iter2_tmp_30_reg_1378;
        ap_reg_pp1_iter3_windows_filter_val_0_20_reg_1392 <= ap_reg_pp1_iter2_windows_filter_val_0_20_reg_1392;
        ap_reg_pp1_iter3_windows_filter_val_0_21_reg_1397 <= ap_reg_pp1_iter2_windows_filter_val_0_21_reg_1397;
        ap_reg_pp1_iter3_windows_filter_val_0_22_reg_1402 <= ap_reg_pp1_iter2_windows_filter_val_0_22_reg_1402;
        ap_reg_pp1_iter3_windows_filter_val_0_23_reg_1407 <= ap_reg_pp1_iter2_windows_filter_val_0_23_reg_1407;
        ap_reg_pp1_iter3_windows_filter_val_0_24_reg_1412 <= ap_reg_pp1_iter2_windows_filter_val_0_24_reg_1412;
        ap_reg_pp1_iter3_windows_filter_val_0_25_reg_1417 <= ap_reg_pp1_iter2_windows_filter_val_0_25_reg_1417;
        ap_reg_pp1_iter3_windows_filter_val_0_26_reg_1422 <= ap_reg_pp1_iter2_windows_filter_val_0_26_reg_1422;
        ap_reg_pp1_iter3_windows_filter_val_0_27_reg_1427 <= ap_reg_pp1_iter2_windows_filter_val_0_27_reg_1427;
        ap_reg_pp1_iter3_windows_filter_val_0_28_reg_1432 <= ap_reg_pp1_iter2_windows_filter_val_0_28_reg_1432;
        ap_reg_pp1_iter3_windows_filter_val_0_29_reg_1437 <= ap_reg_pp1_iter2_windows_filter_val_0_29_reg_1437;
        ap_reg_pp1_iter3_windows_filter_val_0_30_reg_1442 <= ap_reg_pp1_iter2_windows_filter_val_0_30_reg_1442;
        ap_reg_pp1_iter3_windows_filter_val_0_31_reg_1447 <= ap_reg_pp1_iter2_windows_filter_val_0_31_reg_1447;
        ap_reg_pp1_iter3_windows_filter_val_0_32_reg_1452 <= ap_reg_pp1_iter2_windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter3_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter2_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter3_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter2_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter3_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter2_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter4_tmp_30_reg_1378 <= ap_reg_pp1_iter3_tmp_30_reg_1378;
        ap_reg_pp1_iter4_windows_filter_val_0_21_reg_1397 <= ap_reg_pp1_iter3_windows_filter_val_0_21_reg_1397;
        ap_reg_pp1_iter4_windows_filter_val_0_22_reg_1402 <= ap_reg_pp1_iter3_windows_filter_val_0_22_reg_1402;
        ap_reg_pp1_iter4_windows_filter_val_0_23_reg_1407 <= ap_reg_pp1_iter3_windows_filter_val_0_23_reg_1407;
        ap_reg_pp1_iter4_windows_filter_val_0_24_reg_1412 <= ap_reg_pp1_iter3_windows_filter_val_0_24_reg_1412;
        ap_reg_pp1_iter4_windows_filter_val_0_25_reg_1417 <= ap_reg_pp1_iter3_windows_filter_val_0_25_reg_1417;
        ap_reg_pp1_iter4_windows_filter_val_0_26_reg_1422 <= ap_reg_pp1_iter3_windows_filter_val_0_26_reg_1422;
        ap_reg_pp1_iter4_windows_filter_val_0_27_reg_1427 <= ap_reg_pp1_iter3_windows_filter_val_0_27_reg_1427;
        ap_reg_pp1_iter4_windows_filter_val_0_28_reg_1432 <= ap_reg_pp1_iter3_windows_filter_val_0_28_reg_1432;
        ap_reg_pp1_iter4_windows_filter_val_0_29_reg_1437 <= ap_reg_pp1_iter3_windows_filter_val_0_29_reg_1437;
        ap_reg_pp1_iter4_windows_filter_val_0_30_reg_1442 <= ap_reg_pp1_iter3_windows_filter_val_0_30_reg_1442;
        ap_reg_pp1_iter4_windows_filter_val_0_31_reg_1447 <= ap_reg_pp1_iter3_windows_filter_val_0_31_reg_1447;
        ap_reg_pp1_iter4_windows_filter_val_0_32_reg_1452 <= ap_reg_pp1_iter3_windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter4_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter3_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter4_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter3_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter4_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter3_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter5_tmp_30_reg_1378 <= ap_reg_pp1_iter4_tmp_30_reg_1378;
        ap_reg_pp1_iter5_windows_filter_val_0_22_reg_1402 <= ap_reg_pp1_iter4_windows_filter_val_0_22_reg_1402;
        ap_reg_pp1_iter5_windows_filter_val_0_23_reg_1407 <= ap_reg_pp1_iter4_windows_filter_val_0_23_reg_1407;
        ap_reg_pp1_iter5_windows_filter_val_0_24_reg_1412 <= ap_reg_pp1_iter4_windows_filter_val_0_24_reg_1412;
        ap_reg_pp1_iter5_windows_filter_val_0_25_reg_1417 <= ap_reg_pp1_iter4_windows_filter_val_0_25_reg_1417;
        ap_reg_pp1_iter5_windows_filter_val_0_26_reg_1422 <= ap_reg_pp1_iter4_windows_filter_val_0_26_reg_1422;
        ap_reg_pp1_iter5_windows_filter_val_0_27_reg_1427 <= ap_reg_pp1_iter4_windows_filter_val_0_27_reg_1427;
        ap_reg_pp1_iter5_windows_filter_val_0_28_reg_1432 <= ap_reg_pp1_iter4_windows_filter_val_0_28_reg_1432;
        ap_reg_pp1_iter5_windows_filter_val_0_29_reg_1437 <= ap_reg_pp1_iter4_windows_filter_val_0_29_reg_1437;
        ap_reg_pp1_iter5_windows_filter_val_0_30_reg_1442 <= ap_reg_pp1_iter4_windows_filter_val_0_30_reg_1442;
        ap_reg_pp1_iter5_windows_filter_val_0_31_reg_1447 <= ap_reg_pp1_iter4_windows_filter_val_0_31_reg_1447;
        ap_reg_pp1_iter5_windows_filter_val_0_32_reg_1452 <= ap_reg_pp1_iter4_windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter5_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter4_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter5_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter4_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter5_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter4_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter6_tmp_30_reg_1378 <= ap_reg_pp1_iter5_tmp_30_reg_1378;
        ap_reg_pp1_iter6_windows_filter_val_0_23_reg_1407 <= ap_reg_pp1_iter5_windows_filter_val_0_23_reg_1407;
        ap_reg_pp1_iter6_windows_filter_val_0_24_reg_1412 <= ap_reg_pp1_iter5_windows_filter_val_0_24_reg_1412;
        ap_reg_pp1_iter6_windows_filter_val_0_25_reg_1417 <= ap_reg_pp1_iter5_windows_filter_val_0_25_reg_1417;
        ap_reg_pp1_iter6_windows_filter_val_0_26_reg_1422 <= ap_reg_pp1_iter5_windows_filter_val_0_26_reg_1422;
        ap_reg_pp1_iter6_windows_filter_val_0_27_reg_1427 <= ap_reg_pp1_iter5_windows_filter_val_0_27_reg_1427;
        ap_reg_pp1_iter6_windows_filter_val_0_28_reg_1432 <= ap_reg_pp1_iter5_windows_filter_val_0_28_reg_1432;
        ap_reg_pp1_iter6_windows_filter_val_0_29_reg_1437 <= ap_reg_pp1_iter5_windows_filter_val_0_29_reg_1437;
        ap_reg_pp1_iter6_windows_filter_val_0_30_reg_1442 <= ap_reg_pp1_iter5_windows_filter_val_0_30_reg_1442;
        ap_reg_pp1_iter6_windows_filter_val_0_31_reg_1447 <= ap_reg_pp1_iter5_windows_filter_val_0_31_reg_1447;
        ap_reg_pp1_iter6_windows_filter_val_0_32_reg_1452 <= ap_reg_pp1_iter5_windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter6_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter5_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter6_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter5_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter6_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter5_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter7_tmp_30_reg_1378 <= ap_reg_pp1_iter6_tmp_30_reg_1378;
        ap_reg_pp1_iter7_windows_filter_val_0_24_reg_1412 <= ap_reg_pp1_iter6_windows_filter_val_0_24_reg_1412;
        ap_reg_pp1_iter7_windows_filter_val_0_25_reg_1417 <= ap_reg_pp1_iter6_windows_filter_val_0_25_reg_1417;
        ap_reg_pp1_iter7_windows_filter_val_0_26_reg_1422 <= ap_reg_pp1_iter6_windows_filter_val_0_26_reg_1422;
        ap_reg_pp1_iter7_windows_filter_val_0_27_reg_1427 <= ap_reg_pp1_iter6_windows_filter_val_0_27_reg_1427;
        ap_reg_pp1_iter7_windows_filter_val_0_28_reg_1432 <= ap_reg_pp1_iter6_windows_filter_val_0_28_reg_1432;
        ap_reg_pp1_iter7_windows_filter_val_0_29_reg_1437 <= ap_reg_pp1_iter6_windows_filter_val_0_29_reg_1437;
        ap_reg_pp1_iter7_windows_filter_val_0_30_reg_1442 <= ap_reg_pp1_iter6_windows_filter_val_0_30_reg_1442;
        ap_reg_pp1_iter7_windows_filter_val_0_31_reg_1447 <= ap_reg_pp1_iter6_windows_filter_val_0_31_reg_1447;
        ap_reg_pp1_iter7_windows_filter_val_0_32_reg_1452 <= ap_reg_pp1_iter6_windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter7_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter6_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter7_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter6_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter7_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter6_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter8_tmp_30_reg_1378 <= ap_reg_pp1_iter7_tmp_30_reg_1378;
        ap_reg_pp1_iter8_windows_filter_val_0_25_reg_1417 <= ap_reg_pp1_iter7_windows_filter_val_0_25_reg_1417;
        ap_reg_pp1_iter8_windows_filter_val_0_26_reg_1422 <= ap_reg_pp1_iter7_windows_filter_val_0_26_reg_1422;
        ap_reg_pp1_iter8_windows_filter_val_0_27_reg_1427 <= ap_reg_pp1_iter7_windows_filter_val_0_27_reg_1427;
        ap_reg_pp1_iter8_windows_filter_val_0_28_reg_1432 <= ap_reg_pp1_iter7_windows_filter_val_0_28_reg_1432;
        ap_reg_pp1_iter8_windows_filter_val_0_29_reg_1437 <= ap_reg_pp1_iter7_windows_filter_val_0_29_reg_1437;
        ap_reg_pp1_iter8_windows_filter_val_0_30_reg_1442 <= ap_reg_pp1_iter7_windows_filter_val_0_30_reg_1442;
        ap_reg_pp1_iter8_windows_filter_val_0_31_reg_1447 <= ap_reg_pp1_iter7_windows_filter_val_0_31_reg_1447;
        ap_reg_pp1_iter8_windows_filter_val_0_32_reg_1452 <= ap_reg_pp1_iter7_windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter8_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter7_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter8_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter7_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter8_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter7_windows_filter_val_0_35_reg_523;
        ap_reg_pp1_iter9_tmp_30_reg_1378 <= ap_reg_pp1_iter8_tmp_30_reg_1378;
        ap_reg_pp1_iter9_windows_filter_val_0_26_reg_1422 <= ap_reg_pp1_iter8_windows_filter_val_0_26_reg_1422;
        ap_reg_pp1_iter9_windows_filter_val_0_27_reg_1427 <= ap_reg_pp1_iter8_windows_filter_val_0_27_reg_1427;
        ap_reg_pp1_iter9_windows_filter_val_0_28_reg_1432 <= ap_reg_pp1_iter8_windows_filter_val_0_28_reg_1432;
        ap_reg_pp1_iter9_windows_filter_val_0_29_reg_1437 <= ap_reg_pp1_iter8_windows_filter_val_0_29_reg_1437;
        ap_reg_pp1_iter9_windows_filter_val_0_30_reg_1442 <= ap_reg_pp1_iter8_windows_filter_val_0_30_reg_1442;
        ap_reg_pp1_iter9_windows_filter_val_0_31_reg_1447 <= ap_reg_pp1_iter8_windows_filter_val_0_31_reg_1447;
        ap_reg_pp1_iter9_windows_filter_val_0_32_reg_1452 <= ap_reg_pp1_iter8_windows_filter_val_0_32_reg_1452;
        ap_reg_pp1_iter9_windows_filter_val_0_33_reg_1457 <= ap_reg_pp1_iter8_windows_filter_val_0_33_reg_1457;
        ap_reg_pp1_iter9_windows_filter_val_0_34_reg_1462 <= ap_reg_pp1_iter8_windows_filter_val_0_34_reg_1462;
        ap_reg_pp1_iter9_windows_filter_val_0_35_reg_523 <= ap_reg_pp1_iter8_windows_filter_val_0_35_reg_523;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_reg_pp1_iter1_tmp_30_reg_1378 <= tmp_30_reg_1378;
        exitcond_i_i_reg_1369 <= exitcond_i_i_fu_838_p2;
        windows_filter_val_0_18_reg_1382 <= windows_filter_val_0_1_fu_198;
        windows_filter_val_0_19_reg_1387 <= windows_filter_val_0_2_fu_202;
        windows_filter_val_0_20_reg_1392 <= windows_filter_val_0_3_fu_206;
        windows_filter_val_0_21_reg_1397 <= windows_filter_val_0_4_fu_210;
        windows_filter_val_0_22_reg_1402 <= windows_filter_val_0_5_fu_214;
        windows_filter_val_0_23_reg_1407 <= windows_filter_val_0_6_fu_218;
        windows_filter_val_0_24_reg_1412 <= windows_filter_val_0_7_fu_222;
        windows_filter_val_0_25_reg_1417 <= windows_filter_val_0_8_fu_226;
        windows_filter_val_0_26_reg_1422 <= windows_filter_val_0_9_fu_230;
        windows_filter_val_0_27_reg_1427 <= windows_filter_val_0_10_fu_234;
        windows_filter_val_0_28_reg_1432 <= windows_filter_val_0_11_fu_238;
        windows_filter_val_0_29_reg_1437 <= windows_filter_val_0_12_fu_242;
        windows_filter_val_0_30_reg_1442 <= windows_filter_val_0_13_fu_246;
        windows_filter_val_0_31_reg_1447 <= windows_filter_val_0_14_fu_250;
        windows_filter_val_0_32_reg_1452 <= windows_filter_val_0_15_fu_254;
        windows_filter_val_0_33_reg_1457 <= windows_filter_val_0_16_fu_258;
        windows_filter_val_0_34_reg_1462 <= windows_filter_val_0_17_fu_262;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond11_i_i_reg_1355 <= exitcond11_i_i_fu_716_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_3_reg_1340 <= i_3_fu_705_p2;
        next_mul_reg_1332 <= next_mul_fu_693_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_1359 <= i_fu_722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter9_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_10_reg_1512 <= sum_V_10_mult_add_fu_622_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter10_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_11_reg_1517 <= sum_V_11_mult_add_fu_629_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter11_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_12_reg_1522 <= sum_V_12_mult_add_fu_636_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter12_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_13_reg_1527 <= sum_V_13_mult_add_fu_643_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter13_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_14_reg_1532 <= sum_V_14_mult_add_fu_650_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter14_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_15_reg_1537 <= sum_V_15_mult_add_fu_657_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter15_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_16_reg_1542 <= sum_V_16_mult_add_fu_664_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter16_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_17_reg_1547 <= sum_V_17_mult_add_fu_671_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter17_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_18_reg_1552 <= sum_V_18_mult_add_fu_678_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_30_reg_1378 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_i_reg_1369 == 1'd0))) begin
        sum_V_1_reg_1467 <= sum_V_1_mult_add_fu_559_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter1_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_2_reg_1472 <= sum_V_2_mult_add_fu_566_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter2_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_3_reg_1477 <= sum_V_3_mult_add_fu_573_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter3_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_4_reg_1482 <= sum_V_4_mult_add_fu_580_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter4_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_5_reg_1487 <= sum_V_5_mult_add_fu_587_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter5_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_6_reg_1492 <= sum_V_6_mult_add_fu_594_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter6_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_7_reg_1497 <= sum_V_7_mult_add_fu_601_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter7_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_8_reg_1502 <= sum_V_8_mult_add_fu_608_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter8_tmp_30_reg_1378 == 1'd1))) begin
        sum_V_9_reg_1507 <= sum_V_9_mult_add_fu_615_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sum_V_reg_1350 <= Layer1_BiasArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_i_fu_838_p2 == 1'd0))) begin
        tmp_30_reg_1378 <= tmp_30_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_reg_pp1_iter18_tmp_30_reg_1378 == 1'd1))) begin
        tmp_V_49_reg_1557 <= tmp_V_49_fu_1089_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_0_s_fu_266 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_10_s_fu_306 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_11_s_fu_310 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_12_s_fu_314 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_13_s_fu_318 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_14_s_fu_190 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_15_s_fu_186 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_16_s_fu_182 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd17) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_17_s_fu_178 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_0_i_i_reg_500 == 5'd17) & ~(i_0_i_i_reg_500 == 5'd16) & ~(i_0_i_i_reg_500 == 5'd15) & ~(i_0_i_i_reg_500 == 5'd14) & ~(i_0_i_i_reg_500 == 5'd13) & ~(i_0_i_i_reg_500 == 5'd12) & ~(i_0_i_i_reg_500 == 5'd11) & ~(i_0_i_i_reg_500 == 5'd10) & ~(i_0_i_i_reg_500 == 5'd9) & ~(i_0_i_i_reg_500 == 5'd8) & ~(i_0_i_i_reg_500 == 5'd7) & ~(i_0_i_i_reg_500 == 5'd6) & ~(i_0_i_i_reg_500 == 5'd5) & ~(i_0_i_i_reg_500 == 5'd4) & ~(i_0_i_i_reg_500 == 5'd3) & ~(i_0_i_i_reg_500 == 5'd2) & ~(i_0_i_i_reg_500 == 5'd1) & ~(i_0_i_i_reg_500 == 5'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_18_s_fu_174 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_1_s_fu_270 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_2_s_fu_274 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_3_s_fu_278 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_4_s_fu_282 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_5_s_fu_286 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_6_s_fu_290 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_7_s_fu_294 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_8_s_fu_298 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (i_0_i_i_reg_500 == 5'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weight_in_V_1_9_s_fu_302 <= Layer1_WeightArray_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_i_reg_1369 == 1'd0))) begin
        windows_filter_val_0_10_fu_234 <= windows_filter_val_0_11_fu_238;
        windows_filter_val_0_11_fu_238 <= windows_filter_val_0_12_fu_242;
        windows_filter_val_0_12_fu_242 <= windows_filter_val_0_13_fu_246;
        windows_filter_val_0_13_fu_246 <= windows_filter_val_0_14_fu_250;
        windows_filter_val_0_14_fu_250 <= windows_filter_val_0_15_fu_254;
        windows_filter_val_0_15_fu_254 <= windows_filter_val_0_16_fu_258;
        windows_filter_val_0_16_fu_258 <= windows_filter_val_0_17_fu_262;
        windows_filter_val_0_17_fu_262 <= ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20;
        windows_filter_val_0_1_fu_198 <= windows_filter_val_0_2_fu_202;
        windows_filter_val_0_2_fu_202 <= windows_filter_val_0_3_fu_206;
        windows_filter_val_0_3_fu_206 <= windows_filter_val_0_4_fu_210;
        windows_filter_val_0_4_fu_210 <= windows_filter_val_0_5_fu_214;
        windows_filter_val_0_5_fu_214 <= windows_filter_val_0_6_fu_218;
        windows_filter_val_0_6_fu_218 <= windows_filter_val_0_7_fu_222;
        windows_filter_val_0_7_fu_222 <= windows_filter_val_0_8_fu_226;
        windows_filter_val_0_8_fu_226 <= windows_filter_val_0_9_fu_230;
        windows_filter_val_0_9_fu_230 <= windows_filter_val_0_10_fu_234;
        windows_filter_val_0_fu_194 <= windows_filter_val_0_1_fu_198;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        Layer1_BiasArray_V_EN_A = 1'b1;
    end else begin
        Layer1_BiasArray_V_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Layer1_WeightArray_V_EN_A = 1'b1;
    end else begin
        Layer1_WeightArray_V_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond11_i_i_fu_716_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_condition_pp1_exit_iter1_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter1_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_fu_699_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter19 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter20 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond11_i_i_reg_1355 == 1'd0))) begin
        ap_phi_mux_i_0_i_i_phi_fu_504_p4 = i_reg_1359;
    end else begin
        ap_phi_mux_i_0_i_i_phi_fu_504_p4 = i_0_i_i_reg_500;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1421)) begin
        if ((i_0_i_reg_476 == 4'd0)) begin
            ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20 = intermediate_0_V_V_dout;
        end else if ((i_0_i_reg_476 == 4'd1)) begin
            ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20 = intermediate_1_V_V_dout;
        end else if ((i_0_i_reg_476 == 4'd2)) begin
            ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20 = intermediate_2_V_V_dout;
        end else if ((i_0_i_reg_476 == 4'd3)) begin
            ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20 = intermediate_3_V_V_dout;
        end else if ((i_0_i_reg_476 == 4'd4)) begin
            ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20 = intermediate_4_V_V_dout;
        end else if ((i_0_i_reg_476 == 4'd5)) begin
            ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20 = intermediate_5_V_V_dout;
        end else if ((i_0_i_reg_476 == 4'd6)) begin
            ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20 = intermediate_6_V_V_dout;
        end else if ((i_0_i_reg_476 == 4'd7)) begin
            ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20 = intermediate_7_V_V_dout;
        end else if ((i_0_i_reg_476 == 4'd8)) begin
            ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20 = intermediate_8_V_V_dout;
        end else if ((1'b1 == ap_condition_261)) begin
            ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20 = intermediate_9_V_V_dout;
        end else begin
            ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20 = ap_phi_reg_pp1_iter1_windows_filter_val_0_35_reg_523;
        end
    end else begin
        ap_phi_mux_windows_filter_val_0_35_phi_fu_526_p20 = ap_phi_reg_pp1_iter1_windows_filter_val_0_35_reg_523;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (i_0_i_reg_476 == 4'd0) & (exitcond_i_i_reg_1369 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        intermediate_0_V_V_blk_n = intermediate_0_V_V_empty_n;
    end else begin
        intermediate_0_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op207_read_state8 == 1'b1))) begin
        intermediate_0_V_V_read = 1'b1;
    end else begin
        intermediate_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (i_0_i_reg_476 == 4'd1) & (exitcond_i_i_reg_1369 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        intermediate_1_V_V_blk_n = intermediate_1_V_V_empty_n;
    end else begin
        intermediate_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op205_read_state8 == 1'b1))) begin
        intermediate_1_V_V_read = 1'b1;
    end else begin
        intermediate_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (i_0_i_reg_476 == 4'd2) & (exitcond_i_i_reg_1369 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        intermediate_2_V_V_blk_n = intermediate_2_V_V_empty_n;
    end else begin
        intermediate_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op203_read_state8 == 1'b1))) begin
        intermediate_2_V_V_read = 1'b1;
    end else begin
        intermediate_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (i_0_i_reg_476 == 4'd3) & (exitcond_i_i_reg_1369 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        intermediate_3_V_V_blk_n = intermediate_3_V_V_empty_n;
    end else begin
        intermediate_3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op201_read_state8 == 1'b1))) begin
        intermediate_3_V_V_read = 1'b1;
    end else begin
        intermediate_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (i_0_i_reg_476 == 4'd4) & (exitcond_i_i_reg_1369 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        intermediate_4_V_V_blk_n = intermediate_4_V_V_empty_n;
    end else begin
        intermediate_4_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op199_read_state8 == 1'b1))) begin
        intermediate_4_V_V_read = 1'b1;
    end else begin
        intermediate_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (i_0_i_reg_476 == 4'd5) & (exitcond_i_i_reg_1369 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        intermediate_5_V_V_blk_n = intermediate_5_V_V_empty_n;
    end else begin
        intermediate_5_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op197_read_state8 == 1'b1))) begin
        intermediate_5_V_V_read = 1'b1;
    end else begin
        intermediate_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (i_0_i_reg_476 == 4'd6) & (exitcond_i_i_reg_1369 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        intermediate_6_V_V_blk_n = intermediate_6_V_V_empty_n;
    end else begin
        intermediate_6_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op195_read_state8 == 1'b1))) begin
        intermediate_6_V_V_read = 1'b1;
    end else begin
        intermediate_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (i_0_i_reg_476 == 4'd7) & (exitcond_i_i_reg_1369 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        intermediate_7_V_V_blk_n = intermediate_7_V_V_empty_n;
    end else begin
        intermediate_7_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op193_read_state8 == 1'b1))) begin
        intermediate_7_V_V_read = 1'b1;
    end else begin
        intermediate_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (i_0_i_reg_476 == 4'd8) & (exitcond_i_i_reg_1369 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        intermediate_8_V_V_blk_n = intermediate_8_V_V_empty_n;
    end else begin
        intermediate_8_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op191_read_state8 == 1'b1))) begin
        intermediate_8_V_V_read = 1'b1;
    end else begin
        intermediate_8_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_0_i_reg_476 == 4'd8) & ~(i_0_i_reg_476 == 4'd7) & ~(i_0_i_reg_476 == 4'd6) & ~(i_0_i_reg_476 == 4'd5) & ~(i_0_i_reg_476 == 4'd4) & ~(i_0_i_reg_476 == 4'd3) & ~(i_0_i_reg_476 == 4'd2) & ~(i_0_i_reg_476 == 4'd1) & ~(i_0_i_reg_476 == 4'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_i_reg_1369 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        intermediate_9_V_V_blk_n = intermediate_9_V_V_empty_n;
    end else begin
        intermediate_9_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op209_read_state8 == 1'b1))) begin
        intermediate_9_V_V_read = 1'b1;
    end else begin
        intermediate_9_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_fu_699_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (ap_enable_reg_pp1_iter20 == 1'b1) & (i_0_i_reg_476 == 4'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        maxpool_0_V_V_blk_n = maxpool_0_V_V_full_n;
    end else begin
        maxpool_0_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter20 == 1'b1) & (ap_predicate_op293_write_state27 == 1'b1))) begin
        maxpool_0_V_V_write = 1'b1;
    end else begin
        maxpool_0_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (ap_enable_reg_pp1_iter20 == 1'b1) & (i_0_i_reg_476 == 4'd1) & (1'b0 == ap_block_pp1_stage0))) begin
        maxpool_1_V_V_blk_n = maxpool_1_V_V_full_n;
    end else begin
        maxpool_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter20 == 1'b1) & (ap_predicate_op292_write_state27 == 1'b1))) begin
        maxpool_1_V_V_write = 1'b1;
    end else begin
        maxpool_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (ap_enable_reg_pp1_iter20 == 1'b1) & (i_0_i_reg_476 == 4'd2) & (1'b0 == ap_block_pp1_stage0))) begin
        maxpool_2_V_V_blk_n = maxpool_2_V_V_full_n;
    end else begin
        maxpool_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter20 == 1'b1) & (ap_predicate_op291_write_state27 == 1'b1))) begin
        maxpool_2_V_V_write = 1'b1;
    end else begin
        maxpool_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (ap_enable_reg_pp1_iter20 == 1'b1) & (i_0_i_reg_476 == 4'd3) & (1'b0 == ap_block_pp1_stage0))) begin
        maxpool_3_V_V_blk_n = maxpool_3_V_V_full_n;
    end else begin
        maxpool_3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter20 == 1'b1) & (ap_predicate_op290_write_state27 == 1'b1))) begin
        maxpool_3_V_V_write = 1'b1;
    end else begin
        maxpool_3_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (ap_enable_reg_pp1_iter20 == 1'b1) & (i_0_i_reg_476 == 4'd4) & (1'b0 == ap_block_pp1_stage0))) begin
        maxpool_4_V_V_blk_n = maxpool_4_V_V_full_n;
    end else begin
        maxpool_4_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter20 == 1'b1) & (ap_predicate_op289_write_state27 == 1'b1))) begin
        maxpool_4_V_V_write = 1'b1;
    end else begin
        maxpool_4_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (ap_enable_reg_pp1_iter20 == 1'b1) & (i_0_i_reg_476 == 4'd5) & (1'b0 == ap_block_pp1_stage0))) begin
        maxpool_5_V_V_blk_n = maxpool_5_V_V_full_n;
    end else begin
        maxpool_5_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter20 == 1'b1) & (ap_predicate_op288_write_state27 == 1'b1))) begin
        maxpool_5_V_V_write = 1'b1;
    end else begin
        maxpool_5_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (ap_enable_reg_pp1_iter20 == 1'b1) & (i_0_i_reg_476 == 4'd6) & (1'b0 == ap_block_pp1_stage0))) begin
        maxpool_6_V_V_blk_n = maxpool_6_V_V_full_n;
    end else begin
        maxpool_6_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter20 == 1'b1) & (ap_predicate_op287_write_state27 == 1'b1))) begin
        maxpool_6_V_V_write = 1'b1;
    end else begin
        maxpool_6_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (ap_enable_reg_pp1_iter20 == 1'b1) & (i_0_i_reg_476 == 4'd7) & (1'b0 == ap_block_pp1_stage0))) begin
        maxpool_7_V_V_blk_n = maxpool_7_V_V_full_n;
    end else begin
        maxpool_7_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter20 == 1'b1) & (ap_predicate_op286_write_state27 == 1'b1))) begin
        maxpool_7_V_V_write = 1'b1;
    end else begin
        maxpool_7_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (ap_enable_reg_pp1_iter20 == 1'b1) & (i_0_i_reg_476 == 4'd8) & (1'b0 == ap_block_pp1_stage0))) begin
        maxpool_8_V_V_blk_n = maxpool_8_V_V_full_n;
    end else begin
        maxpool_8_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter20 == 1'b1) & (ap_predicate_op285_write_state27 == 1'b1))) begin
        maxpool_8_V_V_write = 1'b1;
    end else begin
        maxpool_8_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~(i_0_i_reg_476 == 4'd8) & ~(i_0_i_reg_476 == 4'd7) & ~(i_0_i_reg_476 == 4'd6) & ~(i_0_i_reg_476 == 4'd5) & ~(i_0_i_reg_476 == 4'd4) & ~(i_0_i_reg_476 == 4'd3) & ~(i_0_i_reg_476 == 4'd2) & ~(i_0_i_reg_476 == 4'd1) & ~(i_0_i_reg_476 == 4'd0) & (ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (ap_enable_reg_pp1_iter20 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        maxpool_9_V_V_blk_n = maxpool_9_V_V_full_n;
    end else begin
        maxpool_9_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter20 == 1'b1) & (ap_predicate_op294_write_state27 == 1'b1))) begin
        maxpool_9_V_V_write = 1'b1;
    end else begin
        maxpool_9_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond_i_fu_699_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond11_i_i_fu_716_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond11_i_i_fu_716_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) & ~((ap_enable_reg_pp1_iter19 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter20 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter19 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter20 == 1'b1)) | ((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Layer1_BiasArray_V_Addr_A = Layer1_BiasArray_V_Addr_A_orig << 32'd2;

assign Layer1_BiasArray_V_Addr_A_orig = tmp_fu_711_p1;

assign Layer1_BiasArray_V_Din_A = 32'd0;

assign Layer1_BiasArray_V_WEN_A = 4'd0;

assign Layer1_WeightArray_V_Addr_A = Layer1_WeightArray_V_Addr_A_orig << 32'd2;

assign Layer1_WeightArray_V_Addr_A_orig = tmp_93_cast_fu_738_p1;

assign Layer1_WeightArray_V_Din_A = 32'd0;

assign Layer1_WeightArray_V_WEN_A = 4'd0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((ap_enable_reg_pp1_iter20 == 1'b1) & (((maxpool_9_V_V_full_n == 1'b0) & (ap_predicate_op294_write_state27 == 1'b1)) | ((maxpool_0_V_V_full_n == 1'b0) & (ap_predicate_op293_write_state27 == 1'b1)) | ((maxpool_1_V_V_full_n == 1'b0) & (ap_predicate_op292_write_state27 == 1'b1)) | ((maxpool_2_V_V_full_n == 1'b0) & (ap_predicate_op291_write_state27 == 1'b1)) | ((maxpool_3_V_V_full_n == 1'b0) & (ap_predicate_op290_write_state27 == 1'b1)) | ((maxpool_4_V_V_full_n == 1'b0) & (ap_predicate_op289_write_state27 == 1'b1)) | ((maxpool_5_V_V_full_n == 1'b0) & (ap_predicate_op288_write_state27 == 1'b1)) | ((maxpool_6_V_V_full_n == 1'b0) & (ap_predicate_op287_write_state27 == 1'b1)) | ((maxpool_7_V_V_full_n == 1'b0) & (ap_predicate_op286_write_state27 == 1'b1)) | ((maxpool_8_V_V_full_n == 1'b0) & (ap_predicate_op285_write_state27 == 1'b1)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (((intermediate_9_V_V_empty_n == 1'b0) & (ap_predicate_op209_read_state8 == 1'b1)) | ((intermediate_0_V_V_empty_n == 1'b0) & (ap_predicate_op207_read_state8 == 1'b1)) | ((intermediate_1_V_V_empty_n == 1'b0) & (ap_predicate_op205_read_state8 == 1'b1)) | ((intermediate_2_V_V_empty_n == 1'b0) & (ap_predicate_op203_read_state8 == 1'b1)) | ((intermediate_3_V_V_empty_n == 1'b0) & (ap_predicate_op201_read_state8 == 1'b1)) | ((intermediate_4_V_V_empty_n == 1'b0) & (ap_predicate_op199_read_state8 == 1'b1)) | ((intermediate_5_V_V_empty_n == 1'b0) & (ap_predicate_op197_read_state8 == 1'b1)) | ((intermediate_6_V_V_empty_n == 1'b0) & (ap_predicate_op195_read_state8 == 1'b1)) | ((intermediate_7_V_V_empty_n == 1'b0) & (ap_predicate_op193_read_state8 == 1'b1)) | ((intermediate_8_V_V_empty_n == 1'b0) & (ap_predicate_op191_read_state8 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter20 == 1'b1) & (((maxpool_9_V_V_full_n == 1'b0) & (ap_predicate_op294_write_state27 == 1'b1)) | ((maxpool_0_V_V_full_n == 1'b0) & (ap_predicate_op293_write_state27 == 1'b1)) | ((maxpool_1_V_V_full_n == 1'b0) & (ap_predicate_op292_write_state27 == 1'b1)) | ((maxpool_2_V_V_full_n == 1'b0) & (ap_predicate_op291_write_state27 == 1'b1)) | ((maxpool_3_V_V_full_n == 1'b0) & (ap_predicate_op290_write_state27 == 1'b1)) | ((maxpool_4_V_V_full_n == 1'b0) & (ap_predicate_op289_write_state27 == 1'b1)) | ((maxpool_5_V_V_full_n == 1'b0) & (ap_predicate_op288_write_state27 == 1'b1)) | ((maxpool_6_V_V_full_n == 1'b0) & (ap_predicate_op287_write_state27 == 1'b1)) | ((maxpool_7_V_V_full_n == 1'b0) & (ap_predicate_op286_write_state27 == 1'b1)) | ((maxpool_8_V_V_full_n == 1'b0) & (ap_predicate_op285_write_state27 == 1'b1)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (((intermediate_9_V_V_empty_n == 1'b0) & (ap_predicate_op209_read_state8 == 1'b1)) | ((intermediate_0_V_V_empty_n == 1'b0) & (ap_predicate_op207_read_state8 == 1'b1)) | ((intermediate_1_V_V_empty_n == 1'b0) & (ap_predicate_op205_read_state8 == 1'b1)) | ((intermediate_2_V_V_empty_n == 1'b0) & (ap_predicate_op203_read_state8 == 1'b1)) | ((intermediate_3_V_V_empty_n == 1'b0) & (ap_predicate_op201_read_state8 == 1'b1)) | ((intermediate_4_V_V_empty_n == 1'b0) & (ap_predicate_op199_read_state8 == 1'b1)) | ((intermediate_5_V_V_empty_n == 1'b0) & (ap_predicate_op197_read_state8 == 1'b1)) | ((intermediate_6_V_V_empty_n == 1'b0) & (ap_predicate_op195_read_state8 == 1'b1)) | ((intermediate_7_V_V_empty_n == 1'b0) & (ap_predicate_op193_read_state8 == 1'b1)) | ((intermediate_8_V_V_empty_n == 1'b0) & (ap_predicate_op191_read_state8 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter20 == 1'b1) & (((maxpool_9_V_V_full_n == 1'b0) & (ap_predicate_op294_write_state27 == 1'b1)) | ((maxpool_0_V_V_full_n == 1'b0) & (ap_predicate_op293_write_state27 == 1'b1)) | ((maxpool_1_V_V_full_n == 1'b0) & (ap_predicate_op292_write_state27 == 1'b1)) | ((maxpool_2_V_V_full_n == 1'b0) & (ap_predicate_op291_write_state27 == 1'b1)) | ((maxpool_3_V_V_full_n == 1'b0) & (ap_predicate_op290_write_state27 == 1'b1)) | ((maxpool_4_V_V_full_n == 1'b0) & (ap_predicate_op289_write_state27 == 1'b1)) | ((maxpool_5_V_V_full_n == 1'b0) & (ap_predicate_op288_write_state27 == 1'b1)) | ((maxpool_6_V_V_full_n == 1'b0) & (ap_predicate_op287_write_state27 == 1'b1)) | ((maxpool_7_V_V_full_n == 1'b0) & (ap_predicate_op286_write_state27 == 1'b1)) | ((maxpool_8_V_V_full_n == 1'b0) & (ap_predicate_op285_write_state27 == 1'b1)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (((intermediate_9_V_V_empty_n == 1'b0) & (ap_predicate_op209_read_state8 == 1'b1)) | ((intermediate_0_V_V_empty_n == 1'b0) & (ap_predicate_op207_read_state8 == 1'b1)) | ((intermediate_1_V_V_empty_n == 1'b0) & (ap_predicate_op205_read_state8 == 1'b1)) | ((intermediate_2_V_V_empty_n == 1'b0) & (ap_predicate_op203_read_state8 == 1'b1)) | ((intermediate_3_V_V_empty_n == 1'b0) & (ap_predicate_op201_read_state8 == 1'b1)) | ((intermediate_4_V_V_empty_n == 1'b0) & (ap_predicate_op199_read_state8 == 1'b1)) | ((intermediate_5_V_V_empty_n == 1'b0) & (ap_predicate_op197_read_state8 == 1'b1)) | ((intermediate_6_V_V_empty_n == 1'b0) & (ap_predicate_op195_read_state8 == 1'b1)) | ((intermediate_7_V_V_empty_n == 1'b0) & (ap_predicate_op193_read_state8 == 1'b1)) | ((intermediate_8_V_V_empty_n == 1'b0) & (ap_predicate_op191_read_state8 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_pp1_stage0_iter20 = (((maxpool_9_V_V_full_n == 1'b0) & (ap_predicate_op294_write_state27 == 1'b1)) | ((maxpool_0_V_V_full_n == 1'b0) & (ap_predicate_op293_write_state27 == 1'b1)) | ((maxpool_1_V_V_full_n == 1'b0) & (ap_predicate_op292_write_state27 == 1'b1)) | ((maxpool_2_V_V_full_n == 1'b0) & (ap_predicate_op291_write_state27 == 1'b1)) | ((maxpool_3_V_V_full_n == 1'b0) & (ap_predicate_op290_write_state27 == 1'b1)) | ((maxpool_4_V_V_full_n == 1'b0) & (ap_predicate_op289_write_state27 == 1'b1)) | ((maxpool_5_V_V_full_n == 1'b0) & (ap_predicate_op288_write_state27 == 1'b1)) | ((maxpool_6_V_V_full_n == 1'b0) & (ap_predicate_op287_write_state27 == 1'b1)) | ((maxpool_7_V_V_full_n == 1'b0) & (ap_predicate_op286_write_state27 == 1'b1)) | ((maxpool_8_V_V_full_n == 1'b0) & (ap_predicate_op285_write_state27 == 1'b1)));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp1_stage0_iter1 = (((intermediate_9_V_V_empty_n == 1'b0) & (ap_predicate_op209_read_state8 == 1'b1)) | ((intermediate_0_V_V_empty_n == 1'b0) & (ap_predicate_op207_read_state8 == 1'b1)) | ((intermediate_1_V_V_empty_n == 1'b0) & (ap_predicate_op205_read_state8 == 1'b1)) | ((intermediate_2_V_V_empty_n == 1'b0) & (ap_predicate_op203_read_state8 == 1'b1)) | ((intermediate_3_V_V_empty_n == 1'b0) & (ap_predicate_op201_read_state8 == 1'b1)) | ((intermediate_4_V_V_empty_n == 1'b0) & (ap_predicate_op199_read_state8 == 1'b1)) | ((intermediate_5_V_V_empty_n == 1'b0) & (ap_predicate_op197_read_state8 == 1'b1)) | ((intermediate_6_V_V_empty_n == 1'b0) & (ap_predicate_op195_read_state8 == 1'b1)) | ((intermediate_7_V_V_empty_n == 1'b0) & (ap_predicate_op193_read_state8 == 1'b1)) | ((intermediate_8_V_V_empty_n == 1'b0) & (ap_predicate_op191_read_state8 == 1'b1)));
end

assign ap_block_state9_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1421 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_i_reg_1369 == 1'd0) & (1'b0 == ap_block_pp1_stage0));
end

always @ (*) begin
    ap_condition_217 = (~(i_0_i_reg_476 == 4'd8) & ~(i_0_i_reg_476 == 4'd7) & ~(i_0_i_reg_476 == 4'd6) & ~(i_0_i_reg_476 == 4'd5) & ~(i_0_i_reg_476 == 4'd4) & ~(i_0_i_reg_476 == 4'd3) & ~(i_0_i_reg_476 == 4'd2) & ~(i_0_i_reg_476 == 4'd1) & ~(i_0_i_reg_476 == 4'd0) & (exitcond_i_i_reg_1369 == 1'd0));
end

always @ (*) begin
    ap_condition_261 = (~(i_0_i_reg_476 == 4'd8) & ~(i_0_i_reg_476 == 4'd7) & ~(i_0_i_reg_476 == 4'd6) & ~(i_0_i_reg_476 == 4'd5) & ~(i_0_i_reg_476 == 4'd4) & ~(i_0_i_reg_476 == 4'd3) & ~(i_0_i_reg_476 == 4'd2) & ~(i_0_i_reg_476 == 4'd1) & ~(i_0_i_reg_476 == 4'd0));
end

always @ (*) begin
    ap_condition_942 = ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter1_windows_filter_val_0_35_reg_523 = 'bx;

always @ (*) begin
    ap_predicate_op191_read_state8 = ((i_0_i_reg_476 == 4'd8) & (exitcond_i_i_reg_1369 == 1'd0));
end

always @ (*) begin
    ap_predicate_op193_read_state8 = ((i_0_i_reg_476 == 4'd7) & (exitcond_i_i_reg_1369 == 1'd0));
end

always @ (*) begin
    ap_predicate_op195_read_state8 = ((i_0_i_reg_476 == 4'd6) & (exitcond_i_i_reg_1369 == 1'd0));
end

always @ (*) begin
    ap_predicate_op197_read_state8 = ((i_0_i_reg_476 == 4'd5) & (exitcond_i_i_reg_1369 == 1'd0));
end

always @ (*) begin
    ap_predicate_op199_read_state8 = ((i_0_i_reg_476 == 4'd4) & (exitcond_i_i_reg_1369 == 1'd0));
end

always @ (*) begin
    ap_predicate_op201_read_state8 = ((i_0_i_reg_476 == 4'd3) & (exitcond_i_i_reg_1369 == 1'd0));
end

always @ (*) begin
    ap_predicate_op203_read_state8 = ((i_0_i_reg_476 == 4'd2) & (exitcond_i_i_reg_1369 == 1'd0));
end

always @ (*) begin
    ap_predicate_op205_read_state8 = ((i_0_i_reg_476 == 4'd1) & (exitcond_i_i_reg_1369 == 1'd0));
end

always @ (*) begin
    ap_predicate_op207_read_state8 = ((i_0_i_reg_476 == 4'd0) & (exitcond_i_i_reg_1369 == 1'd0));
end

always @ (*) begin
    ap_predicate_op209_read_state8 = (~(i_0_i_reg_476 == 4'd8) & ~(i_0_i_reg_476 == 4'd7) & ~(i_0_i_reg_476 == 4'd6) & ~(i_0_i_reg_476 == 4'd5) & ~(i_0_i_reg_476 == 4'd4) & ~(i_0_i_reg_476 == 4'd3) & ~(i_0_i_reg_476 == 4'd2) & ~(i_0_i_reg_476 == 4'd1) & ~(i_0_i_reg_476 == 4'd0) & (exitcond_i_i_reg_1369 == 1'd0));
end

always @ (*) begin
    ap_predicate_op285_write_state27 = ((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (i_0_i_reg_476 == 4'd8));
end

always @ (*) begin
    ap_predicate_op286_write_state27 = ((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (i_0_i_reg_476 == 4'd7));
end

always @ (*) begin
    ap_predicate_op287_write_state27 = ((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (i_0_i_reg_476 == 4'd6));
end

always @ (*) begin
    ap_predicate_op288_write_state27 = ((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (i_0_i_reg_476 == 4'd5));
end

always @ (*) begin
    ap_predicate_op289_write_state27 = ((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (i_0_i_reg_476 == 4'd4));
end

always @ (*) begin
    ap_predicate_op290_write_state27 = ((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (i_0_i_reg_476 == 4'd3));
end

always @ (*) begin
    ap_predicate_op291_write_state27 = ((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (i_0_i_reg_476 == 4'd2));
end

always @ (*) begin
    ap_predicate_op292_write_state27 = ((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (i_0_i_reg_476 == 4'd1));
end

always @ (*) begin
    ap_predicate_op293_write_state27 = ((ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1) & (i_0_i_reg_476 == 4'd0));
end

always @ (*) begin
    ap_predicate_op294_write_state27 = (~(i_0_i_reg_476 == 4'd8) & ~(i_0_i_reg_476 == 4'd7) & ~(i_0_i_reg_476 == 4'd6) & ~(i_0_i_reg_476 == 4'd5) & ~(i_0_i_reg_476 == 4'd4) & ~(i_0_i_reg_476 == 4'd3) & ~(i_0_i_reg_476 == 4'd2) & ~(i_0_i_reg_476 == 4'd1) & ~(i_0_i_reg_476 == 4'd0) & (ap_reg_pp1_iter19_tmp_30_reg_1378 == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign exitcond11_i_i_fu_716_p2 = ((ap_phi_mux_i_0_i_i_phi_fu_504_p4 == 5'd19) ? 1'b1 : 1'b0);

assign exitcond_i_fu_699_p2 = ((i_0_i_reg_476 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_838_p2 = ((i1_0_i_i_reg_512 == 8'd210) ? 1'b1 : 1'b0);

assign i_3_fu_705_p2 = (i_0_i_reg_476 + 4'd1);

assign i_4_fu_844_p2 = (i1_0_i_i_reg_512 + 8'd1);

assign i_fu_722_p2 = (ap_phi_mux_i_0_i_i_phi_fu_504_p4 + 5'd1);

assign maxpool_0_V_V_din = tmp_V_1_fu_1097_p1;

assign maxpool_1_V_V_din = tmp_V_1_fu_1097_p1;

assign maxpool_2_V_V_din = tmp_V_1_fu_1097_p1;

assign maxpool_3_V_V_din = tmp_V_1_fu_1097_p1;

assign maxpool_4_V_V_din = tmp_V_1_fu_1097_p1;

assign maxpool_5_V_V_din = tmp_V_1_fu_1097_p1;

assign maxpool_6_V_V_din = tmp_V_1_fu_1097_p1;

assign maxpool_7_V_V_din = tmp_V_1_fu_1097_p1;

assign maxpool_8_V_V_din = tmp_V_1_fu_1097_p1;

assign maxpool_9_V_V_din = tmp_V_1_fu_1097_p1;

assign next_mul_fu_693_p2 = (phi_mul_reg_488 + 8'd19);

assign start_out = real_start;

assign tmp_152_fu_1077_p1 = sum_V_20_mult_add_fu_685_ap_return[16:0];

assign tmp_153_fu_1081_p3 = sum_V_20_mult_add_fu_685_ap_return[32'd17];

assign tmp_30_fu_850_p2 = ((i1_0_i_i_reg_512 > 8'd17) ? 1'b1 : 1'b0);

assign tmp_93_cast_fu_738_p1 = tmp_s_fu_732_p2;

assign tmp_V_1_fu_1097_p1 = tmp_V_49_reg_1557;

assign tmp_V_49_fu_1089_p3 = ((tmp_153_fu_1081_p3[0:0] === 1'b1) ? 17'd0 : tmp_152_fu_1077_p1);

assign tmp_cast_fu_728_p1 = ap_phi_mux_i_0_i_i_phi_fu_504_p4;

assign tmp_fu_711_p1 = i_0_i_reg_476;

assign tmp_s_fu_732_p2 = (phi_mul_reg_488 + tmp_cast_fu_728_p1);

endmodule //CNN_1D_Loop_Loop_Con
