// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _exp_24_16_s_HH_
#define _exp_24_16_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "MASTER_CNN_mul_50fYi.h"
#include "exp_24_16_s_f_x_mdEe.h"
#include "exp_24_16_s_exp_xeOg.h"

namespace ap_rtl {

struct exp_24_16_s : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<14> > x_V;
    sc_out< sc_lv<24> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    exp_24_16_s(sc_module_name name);
    SC_HAS_PROCESS(exp_24_16_s);

    ~exp_24_16_s();

    sc_trace_file* mVcdFile;

    exp_24_16_s_f_x_mdEe* f_x_msb_2_table_U;
    exp_24_16_s_exp_xeOg* exp_x_msb_1_table32_U;
    MASTER_CNN_mul_50fYi<1,2,50,50,100>* MASTER_CNN_mul_50fYi_U604;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<8> > f_x_msb_2_table_address0;
    sc_signal< sc_logic > f_x_msb_2_table_ce0;
    sc_signal< sc_lv<46> > f_x_msb_2_table_q0;
    sc_signal< sc_lv<8> > exp_x_msb_1_table32_address0;
    sc_signal< sc_logic > exp_x_msb_1_table32_ce0;
    sc_signal< sc_lv<50> > exp_x_msb_1_table32_q0;
    sc_signal< sc_lv<14> > x_V_read_reg_385;
    sc_signal< sc_lv<14> > ap_reg_pp0_iter1_x_V_read_reg_385;
    sc_signal< sc_lv<14> > ap_reg_pp0_iter2_x_V_read_reg_385;
    sc_signal< sc_lv<14> > ap_reg_pp0_iter3_x_V_read_reg_385;
    sc_signal< sc_lv<1> > tmp_fu_112_p3;
    sc_signal< sc_lv<1> > tmp_reg_390;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_tmp_reg_390;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_tmp_reg_390;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter3_tmp_reg_390;
    sc_signal< sc_lv<8> > loc_V_fu_142_p3;
    sc_signal< sc_lv<8> > loc_V_reg_396;
    sc_signal< sc_lv<9> > r_V_3_fu_177_p2;
    sc_signal< sc_lv<9> > r_V_3_reg_411;
    sc_signal< sc_lv<41> > tmp_9_fu_183_p1;
    sc_signal< sc_lv<41> > tmp_9_reg_416;
    sc_signal< sc_lv<50> > p_Val2_8_reg_421;
    sc_signal< sc_lv<50> > ap_reg_pp0_iter2_p_Val2_8_reg_421;
    sc_signal< sc_lv<50> > ap_reg_pp0_iter3_p_Val2_8_reg_421;
    sc_signal< sc_lv<48> > p_Val2_7_reg_437;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > tmp_s_fu_150_p1;
    sc_signal< sc_lv<64> > tmp_3_fu_155_p1;
    sc_signal< sc_lv<7> > p_Result_s_fu_120_p4;
    sc_signal< sc_lv<5> > tmp_7_fu_138_p1;
    sc_signal< sc_lv<8> > p_Result_s_25_fu_130_p3;
    sc_signal< sc_lv<5> > loc_V_1_fu_160_p4;
    sc_signal< sc_lv<9> > tmp_2_fu_174_p1;
    sc_signal< sc_lv<9> > tmp_1_fu_170_p1;
    sc_signal< sc_lv<50> > p_Result_1_fu_187_p3;
    sc_signal< sc_lv<50> > grp_fu_200_p0;
    sc_signal< sc_lv<50> > grp_fu_200_p1;
    sc_signal< sc_lv<100> > grp_fu_200_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_216_p3;
    sc_signal< sc_lv<50> > tmp_5_fu_235_p1;
    sc_signal< sc_lv<50> > p_Val2_9_fu_238_p2;
    sc_signal< sc_lv<1> > not_s_fu_223_p2;
    sc_signal< sc_lv<46> > p_cast_cast_cast_fu_228_p3;
    sc_signal< sc_lv<46> > y_V_fu_243_p4;
    sc_signal< sc_lv<46> > p_Val2_10_fu_253_p3;
    sc_signal< sc_lv<1> > tmp_10_fu_261_p3;
    sc_signal< sc_lv<1> > tmp_11_fu_269_p3;
    sc_signal< sc_lv<1> > tmp_12_fu_277_p3;
    sc_signal< sc_lv<1> > tmp_13_fu_285_p3;
    sc_signal< sc_lv<1> > tmp5_fu_331_p2;
    sc_signal< sc_lv<1> > tmp4_fu_325_p2;
    sc_signal< sc_lv<1> > tmp_14_fu_293_p3;
    sc_signal< sc_lv<1> > tmp_15_fu_301_p3;
    sc_signal< sc_lv<1> > tmp_16_fu_309_p3;
    sc_signal< sc_lv<1> > tmp_17_fu_317_p3;
    sc_signal< sc_lv<1> > tmp8_fu_349_p2;
    sc_signal< sc_lv<1> > tmp7_fu_343_p2;
    sc_signal< sc_lv<1> > tmp6_fu_355_p2;
    sc_signal< sc_lv<1> > tmp3_fu_337_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_361_p2;
    sc_signal< sc_lv<24> > tmp_6_fu_367_p4;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to3;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<100> > grp_fu_200_p00;
    sc_signal< sc_lv<100> > grp_fu_200_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_63;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<46> ap_const_lv46_0;
    static const sc_lv<46> ap_const_lv46_1FFFFFFFFFFF;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<24> ap_const_lv24_7FFFFF;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to3();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return();
    void thread_exp_x_msb_1_table32_address0();
    void thread_exp_x_msb_1_table32_ce0();
    void thread_f_x_msb_2_table_address0();
    void thread_f_x_msb_2_table_ce0();
    void thread_grp_fu_200_p0();
    void thread_grp_fu_200_p00();
    void thread_grp_fu_200_p1();
    void thread_grp_fu_200_p10();
    void thread_loc_V_1_fu_160_p4();
    void thread_loc_V_fu_142_p3();
    void thread_not_s_fu_223_p2();
    void thread_p_Result_1_fu_187_p3();
    void thread_p_Result_s_25_fu_130_p3();
    void thread_p_Result_s_fu_120_p4();
    void thread_p_Val2_10_fu_253_p3();
    void thread_p_Val2_9_fu_238_p2();
    void thread_p_cast_cast_cast_fu_228_p3();
    void thread_r_V_3_fu_177_p2();
    void thread_tmp3_fu_337_p2();
    void thread_tmp4_fu_325_p2();
    void thread_tmp5_fu_331_p2();
    void thread_tmp6_fu_355_p2();
    void thread_tmp7_fu_343_p2();
    void thread_tmp8_fu_349_p2();
    void thread_tmp_10_fu_261_p3();
    void thread_tmp_11_fu_269_p3();
    void thread_tmp_12_fu_277_p3();
    void thread_tmp_13_fu_285_p3();
    void thread_tmp_14_fu_293_p3();
    void thread_tmp_15_fu_301_p3();
    void thread_tmp_16_fu_309_p3();
    void thread_tmp_17_fu_317_p3();
    void thread_tmp_1_fu_170_p1();
    void thread_tmp_2_fu_174_p1();
    void thread_tmp_3_fu_155_p1();
    void thread_tmp_4_fu_216_p3();
    void thread_tmp_5_fu_235_p1();
    void thread_tmp_6_fu_367_p4();
    void thread_tmp_7_fu_138_p1();
    void thread_tmp_8_fu_361_p2();
    void thread_tmp_9_fu_183_p1();
    void thread_tmp_fu_112_p3();
    void thread_tmp_s_fu_150_p1();
    void thread_y_V_fu_243_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
