// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Layer23_Maxpool_read (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_0_V_V_dout,
        src_0_V_V_empty_n,
        src_0_V_V_read,
        src_1_V_V_dout,
        src_1_V_V_empty_n,
        src_1_V_V_read,
        src_2_V_V_dout,
        src_2_V_V_empty_n,
        src_2_V_V_read,
        src_3_V_V_dout,
        src_3_V_V_empty_n,
        src_3_V_V_read,
        src_4_V_V_dout,
        src_4_V_V_empty_n,
        src_4_V_V_read,
        src_5_V_V_dout,
        src_5_V_V_empty_n,
        src_5_V_V_read,
        src_6_V_V_dout,
        src_6_V_V_empty_n,
        src_6_V_V_read,
        src_7_V_V_dout,
        src_7_V_V_empty_n,
        src_7_V_V_read,
        src_8_V_V_dout,
        src_8_V_V_empty_n,
        src_8_V_V_read,
        src_9_V_V_dout,
        src_9_V_V_empty_n,
        src_9_V_V_read,
        saveValueLayer2_V_Addr_A,
        saveValueLayer2_V_EN_A,
        saveValueLayer2_V_WEN_A,
        saveValueLayer2_V_Din_A,
        saveValueLayer2_V_Dout_A,
        dst_V_din,
        dst_V_full_n,
        dst_V_write
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_pp0_stage0 = 22'd2;
parameter    ap_ST_fsm_pp0_stage1 = 22'd4;
parameter    ap_ST_fsm_pp0_stage2 = 22'd8;
parameter    ap_ST_fsm_pp0_stage3 = 22'd16;
parameter    ap_ST_fsm_pp0_stage4 = 22'd32;
parameter    ap_ST_fsm_pp0_stage5 = 22'd64;
parameter    ap_ST_fsm_pp0_stage6 = 22'd128;
parameter    ap_ST_fsm_pp0_stage7 = 22'd256;
parameter    ap_ST_fsm_pp0_stage8 = 22'd512;
parameter    ap_ST_fsm_pp0_stage9 = 22'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 22'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 22'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 22'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 22'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 22'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 22'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 22'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 22'd262144;
parameter    ap_ST_fsm_pp0_stage18 = 22'd524288;
parameter    ap_ST_fsm_pp0_stage19 = 22'd1048576;
parameter    ap_ST_fsm_state23 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [17:0] src_0_V_V_dout;
input   src_0_V_V_empty_n;
output   src_0_V_V_read;
input  [17:0] src_1_V_V_dout;
input   src_1_V_V_empty_n;
output   src_1_V_V_read;
input  [17:0] src_2_V_V_dout;
input   src_2_V_V_empty_n;
output   src_2_V_V_read;
input  [17:0] src_3_V_V_dout;
input   src_3_V_V_empty_n;
output   src_3_V_V_read;
input  [17:0] src_4_V_V_dout;
input   src_4_V_V_empty_n;
output   src_4_V_V_read;
input  [17:0] src_5_V_V_dout;
input   src_5_V_V_empty_n;
output   src_5_V_V_read;
input  [17:0] src_6_V_V_dout;
input   src_6_V_V_empty_n;
output   src_6_V_V_read;
input  [17:0] src_7_V_V_dout;
input   src_7_V_V_empty_n;
output   src_7_V_V_read;
input  [17:0] src_8_V_V_dout;
input   src_8_V_V_empty_n;
output   src_8_V_V_read;
input  [17:0] src_9_V_V_dout;
input   src_9_V_V_empty_n;
output   src_9_V_V_read;
output  [31:0] saveValueLayer2_V_Addr_A;
output   saveValueLayer2_V_EN_A;
output  [3:0] saveValueLayer2_V_WEN_A;
output  [31:0] saveValueLayer2_V_Din_A;
input  [31:0] saveValueLayer2_V_Dout_A;
output  [17:0] dst_V_din;
input   dst_V_full_n;
output   dst_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_0_V_V_read;
reg src_1_V_V_read;
reg src_2_V_V_read;
reg src_3_V_V_read;
reg src_4_V_V_read;
reg src_5_V_V_read;
reg src_6_V_V_read;
reg src_7_V_V_read;
reg src_8_V_V_read;
reg src_9_V_V_read;
reg saveValueLayer2_V_EN_A;
reg[3:0] saveValueLayer2_V_WEN_A;
reg[31:0] saveValueLayer2_V_Din_A;
reg[17:0] dst_V_din;
reg dst_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src_0_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond8_reg_705;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg    src_1_V_V_blk_n;
reg    src_2_V_V_blk_n;
reg    src_3_V_V_blk_n;
reg    src_4_V_V_blk_n;
reg    src_5_V_V_blk_n;
reg    src_6_V_V_blk_n;
reg    src_7_V_V_blk_n;
reg    src_8_V_V_blk_n;
reg    src_9_V_V_blk_n;
reg    dst_V_blk_n;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
reg   [5:0] col_reg_338;
wire   [0:0] exitcond8_fu_350_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state22_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [5:0] col_1_fu_356_p2;
reg   [5:0] col_1_reg_709;
wire   [6:0] pos_fu_362_p3;
reg   [6:0] pos_reg_714;
reg    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [17:0] tmp_V_reg_722;
reg   [17:0] tmp_V_2_reg_728;
reg   [17:0] tmp_V_4_reg_735;
reg   [17:0] tmp_V_6_reg_742;
reg   [17:0] tmp_V_8_reg_749;
reg   [17:0] tmp_V_10_reg_756;
reg   [17:0] tmp_V_12_reg_763;
reg   [17:0] tmp_V_14_reg_770;
reg   [17:0] tmp_V_16_reg_777;
reg   [17:0] tmp_V_18_reg_784;
wire   [6:0] tmp_s_fu_375_p2;
reg   [6:0] tmp_s_reg_791;
reg    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg   [17:0] tmp_V_1_reg_800;
reg   [17:0] tmp_V_3_reg_806;
reg   [17:0] tmp_V_5_reg_813;
reg   [17:0] tmp_V_7_reg_820;
reg   [17:0] tmp_V_9_reg_827;
reg   [17:0] tmp_V_11_reg_834;
reg   [17:0] tmp_V_13_reg_841;
reg   [17:0] tmp_V_15_reg_848;
reg   [17:0] tmp_V_17_reg_855;
reg   [17:0] tmp_V_19_reg_862;
wire   [8:0] tmp_cast120_cast_fu_435_p1;
reg   [8:0] tmp_cast120_cast_reg_869;
reg    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
wire   [8:0] tmp_9_cast118_cast_fu_460_p1;
reg   [8:0] tmp_9_cast118_cast_reg_875;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [9:0] tmp_cast1_fu_535_p1;
reg   [9:0] tmp_cast1_reg_881;
reg    ap_block_state13_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_11001;
wire   [9:0] tmp_9_cast1_fu_560_p1;
reg   [9:0] tmp_9_cast1_reg_887;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_state21_pp0_stage19_iter0;
reg    ap_block_pp0_stage19_subdone;
reg   [5:0] ap_phi_mux_col_phi_fu_342_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_fu_370_p1;
wire   [63:0] tmp_9_fu_380_p1;
wire   [63:0] tmp_50_cast_fu_394_p1;
wire   [63:0] tmp_41_cast_fu_419_p1;
wire   [63:0] tmp_42_cast_fu_444_p1;
wire   [63:0] tmp_51_cast_fu_469_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] tmp_43_cast_fu_479_p1;
wire   [63:0] tmp_52_cast_fu_500_p1;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire   [63:0] tmp_36_fu_505_p4;
wire   [63:0] tmp_45_fu_527_p3;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire   [63:0] tmp_45_cast_fu_544_p1;
wire   [63:0] tmp_54_cast_fu_569_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] tmp_46_cast_fu_579_p1;
wire   [63:0] tmp_55_cast_fu_600_p1;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire   [63:0] tmp_47_cast_fu_610_p1;
wire   [63:0] tmp_56_cast_fu_631_p1;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire   [63:0] tmp_40_fu_636_p4;
wire   [63:0] tmp_49_fu_658_p3;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire   [63:0] tmp_49_cast_fu_675_p1;
wire   [63:0] tmp_58_cast_fu_700_p1;
reg    ap_block_state5_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_state9_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_state11_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_state15_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state17_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_11001;
reg    ap_block_state19_pp0_stage17_iter0;
reg    ap_block_pp0_stage17_11001;
reg    ap_block_pp0_stage19_11001;
wire   [17:0] storemerge_fu_403_p3;
reg    ap_block_pp0_stage3_01001;
wire   [17:0] storemerge_1_fu_428_p3;
reg    ap_block_pp0_stage4_01001;
wire   [17:0] storemerge_2_fu_453_p3;
reg    ap_block_pp0_stage5_01001;
wire   [17:0] storemerge_3_fu_488_p3;
reg    ap_block_pp0_stage7_01001;
wire   [17:0] storemerge_4_fu_520_p3;
reg    ap_block_pp0_stage9_01001;
wire   [17:0] storemerge_5_fu_553_p3;
reg    ap_block_pp0_stage11_01001;
wire   [17:0] storemerge_6_fu_588_p3;
reg    ap_block_pp0_stage13_01001;
wire   [17:0] storemerge_7_fu_619_p3;
reg    ap_block_pp0_stage15_01001;
wire   [17:0] storemerge_8_fu_651_p3;
reg    ap_block_pp0_stage17_01001;
wire   [17:0] storemerge_9_fu_684_p3;
reg    ap_block_pp0_stage19_01001;
reg   [31:0] saveValueLayer2_V_Addr_A_orig;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire    ap_block_state18_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
wire    ap_block_state20_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
wire   [7:0] tmp_9_cast_fu_385_p1;
wire   [7:0] tmp_42_fu_388_p2;
wire   [0:0] tmp_10_fu_399_p2;
wire   [7:0] tmp_cast_fu_410_p1;
wire   [7:0] tmp_33_fu_413_p2;
wire   [0:0] tmp_74_1_fu_424_p2;
wire   [8:0] tmp_34_fu_438_p2;
wire   [0:0] tmp_74_2_fu_449_p2;
wire   [8:0] tmp_43_fu_463_p2;
wire   [8:0] tmp_35_fu_474_p2;
wire   [0:0] tmp_74_3_fu_484_p2;
wire   [8:0] tmp_44_fu_495_p2;
wire   [0:0] tmp_74_4_fu_516_p2;
wire   [9:0] tmp_37_fu_538_p2;
wire   [0:0] tmp_74_5_fu_549_p2;
wire   [9:0] tmp_46_fu_563_p2;
wire   [9:0] tmp_38_fu_574_p2;
wire   [0:0] tmp_74_6_fu_584_p2;
wire   [9:0] tmp_47_fu_595_p2;
wire   [9:0] tmp_39_fu_605_p2;
wire   [0:0] tmp_74_7_fu_615_p2;
wire   [9:0] tmp_48_fu_626_p2;
wire   [0:0] tmp_74_8_fu_647_p2;
wire   [8:0] tmp_41_fu_666_p2;
wire  signed [9:0] tmp_49_cast1_fu_671_p1;
wire   [0:0] tmp_74_9_fu_680_p2;
wire   [8:0] tmp_50_fu_691_p2;
wire  signed [9:0] tmp_58_cast1_fu_696_p1;
wire    ap_CS_fsm_state23;
reg   [21:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 22'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage19_subdone) & (1'b1 == ap_CS_fsm_pp0_stage19))))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage19_subdone) & (1'b1 == ap_CS_fsm_pp0_stage19)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond8_reg_705 == 1'd0))) begin
        col_reg_338 <= col_1_reg_709;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        col_reg_338 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        col_1_reg_709 <= col_1_fu_356_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond8_reg_705 <= exitcond8_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond8_reg_705 == 1'd0))) begin
        pos_reg_714[6 : 1] <= pos_fu_362_p3[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond8_reg_705 == 1'd0))) begin
        tmp_9_cast118_cast_reg_875[6 : 1] <= tmp_9_cast118_cast_fu_460_p1[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (exitcond8_reg_705 == 1'd0))) begin
        tmp_9_cast1_reg_887[6 : 1] <= tmp_9_cast1_fu_560_p1[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0))) begin
        tmp_V_10_reg_756 <= src_5_V_V_dout;
        tmp_V_12_reg_763 <= src_6_V_V_dout;
        tmp_V_14_reg_770 <= src_7_V_V_dout;
        tmp_V_16_reg_777 <= src_8_V_V_dout;
        tmp_V_18_reg_784 <= src_9_V_V_dout;
        tmp_V_2_reg_728 <= src_1_V_V_dout;
        tmp_V_4_reg_735 <= src_2_V_V_dout;
        tmp_V_6_reg_742 <= src_3_V_V_dout;
        tmp_V_8_reg_749 <= src_4_V_V_dout;
        tmp_V_reg_722 <= src_0_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0))) begin
        tmp_V_11_reg_834 <= src_5_V_V_dout;
        tmp_V_13_reg_841 <= src_6_V_V_dout;
        tmp_V_15_reg_848 <= src_7_V_V_dout;
        tmp_V_17_reg_855 <= src_8_V_V_dout;
        tmp_V_19_reg_862 <= src_9_V_V_dout;
        tmp_V_1_reg_800 <= src_0_V_V_dout;
        tmp_V_3_reg_806 <= src_1_V_V_dout;
        tmp_V_5_reg_813 <= src_2_V_V_dout;
        tmp_V_7_reg_820 <= src_3_V_V_dout;
        tmp_V_9_reg_827 <= src_4_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond8_reg_705 == 1'd0))) begin
        tmp_cast120_cast_reg_869[6 : 1] <= tmp_cast120_cast_fu_435_p1[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond8_reg_705 == 1'd0))) begin
        tmp_cast1_reg_881[6 : 1] <= tmp_cast1_fu_535_p1[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond8_reg_705 == 1'd0))) begin
        tmp_s_reg_791[6 : 1] <= tmp_s_fu_375_p2[6 : 1];
    end
end

always @ (*) begin
    if ((exitcond8_fu_350_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond8_reg_705 == 1'd0))) begin
        ap_phi_mux_col_phi_fu_342_p4 = col_1_reg_709;
    end else begin
        ap_phi_mux_col_phi_fu_342_p4 = col_reg_338;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (exitcond8_reg_705 == 1'd0)))) begin
        dst_V_blk_n = dst_V_full_n;
    end else begin
        dst_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0))) begin
        if (((1'b0 == ap_block_pp0_stage19_01001) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
            dst_V_din = storemerge_9_fu_684_p3;
        end else if (((1'b0 == ap_block_pp0_stage17_01001) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            dst_V_din = storemerge_8_fu_651_p3;
        end else if (((1'b0 == ap_block_pp0_stage15_01001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            dst_V_din = storemerge_7_fu_619_p3;
        end else if (((1'b0 == ap_block_pp0_stage13_01001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            dst_V_din = storemerge_6_fu_588_p3;
        end else if (((1'b0 == ap_block_pp0_stage11_01001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            dst_V_din = storemerge_5_fu_553_p3;
        end else if (((1'b0 == ap_block_pp0_stage9_01001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            dst_V_din = storemerge_4_fu_520_p3;
        end else if (((1'b0 == ap_block_pp0_stage7_01001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            dst_V_din = storemerge_3_fu_488_p3;
        end else if (((1'b0 == ap_block_pp0_stage5_01001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            dst_V_din = storemerge_2_fu_453_p3;
        end else if (((1'b0 == ap_block_pp0_stage4_01001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            dst_V_din = storemerge_1_fu_428_p3;
        end else if (((1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            dst_V_din = storemerge_fu_403_p3;
        end else begin
            dst_V_din = 'bx;
        end
    end else begin
        dst_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)))) begin
        dst_V_write = 1'b1;
    end else begin
        dst_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_58_cast_fu_700_p1;
    end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_49_cast_fu_675_p1;
    end else if (((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_49_fu_658_p3;
    end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_40_fu_636_p4;
    end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_56_cast_fu_631_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_47_cast_fu_610_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_55_cast_fu_600_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_46_cast_fu_579_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_54_cast_fu_569_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_45_cast_fu_544_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_45_fu_527_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_36_fu_505_p4;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_52_cast_fu_500_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_43_cast_fu_479_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_51_cast_fu_469_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_42_cast_fu_444_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_41_cast_fu_419_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_50_cast_fu_394_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_9_fu_380_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        saveValueLayer2_V_Addr_A_orig = tmp_fu_370_p1;
    end else begin
        saveValueLayer2_V_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        saveValueLayer2_V_Din_A = tmp_V_19_reg_862;
    end else if (((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Din_A = tmp_V_18_reg_784;
    end else if (((1'b0 == ap_block_pp0_stage18) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Din_A = tmp_V_17_reg_855;
    end else if (((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Din_A = tmp_V_16_reg_777;
    end else if (((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Din_A = tmp_V_15_reg_848;
    end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Din_A = tmp_V_14_reg_770;
    end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Din_A = tmp_V_13_reg_841;
    end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Din_A = tmp_V_12_reg_763;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Din_A = tmp_V_11_reg_834;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Din_A = tmp_V_10_reg_756;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Din_A = tmp_V_9_reg_827;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9))) begin
        saveValueLayer2_V_Din_A = tmp_V_8_reg_749;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Din_A = tmp_V_7_reg_820;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7))) begin
        saveValueLayer2_V_Din_A = tmp_V_6_reg_742;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        saveValueLayer2_V_Din_A = tmp_V_5_reg_813;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        saveValueLayer2_V_Din_A = tmp_V_4_reg_735;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        saveValueLayer2_V_Din_A = tmp_V_2_reg_728;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        saveValueLayer2_V_Din_A = tmp_V_3_reg_806;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1)))) begin
        saveValueLayer2_V_Din_A = src_0_V_V_dout;
    end else begin
        saveValueLayer2_V_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        saveValueLayer2_V_EN_A = 1'b1;
    end else begin
        saveValueLayer2_V_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)))) begin
        saveValueLayer2_V_WEN_A = 4'd15;
    end else begin
        saveValueLayer2_V_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        src_0_V_V_blk_n = src_0_V_V_empty_n;
    end else begin
        src_0_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)))) begin
        src_0_V_V_read = 1'b1;
    end else begin
        src_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        src_1_V_V_blk_n = src_1_V_V_empty_n;
    end else begin
        src_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)))) begin
        src_1_V_V_read = 1'b1;
    end else begin
        src_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        src_2_V_V_blk_n = src_2_V_V_empty_n;
    end else begin
        src_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)))) begin
        src_2_V_V_read = 1'b1;
    end else begin
        src_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        src_3_V_V_blk_n = src_3_V_V_empty_n;
    end else begin
        src_3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)))) begin
        src_3_V_V_read = 1'b1;
    end else begin
        src_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        src_4_V_V_blk_n = src_4_V_V_empty_n;
    end else begin
        src_4_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)))) begin
        src_4_V_V_read = 1'b1;
    end else begin
        src_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        src_5_V_V_blk_n = src_5_V_V_empty_n;
    end else begin
        src_5_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)))) begin
        src_5_V_V_read = 1'b1;
    end else begin
        src_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        src_6_V_V_blk_n = src_6_V_V_empty_n;
    end else begin
        src_6_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)))) begin
        src_6_V_V_read = 1'b1;
    end else begin
        src_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        src_7_V_V_blk_n = src_7_V_V_empty_n;
    end else begin
        src_7_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)))) begin
        src_7_V_V_read = 1'b1;
    end else begin
        src_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        src_8_V_V_blk_n = src_8_V_V_empty_n;
    end else begin
        src_8_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)))) begin
        src_8_V_V_read = 1'b1;
    end else begin
        src_8_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (exitcond8_reg_705 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        src_9_V_V_blk_n = src_9_V_V_empty_n;
    end else begin
        src_9_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0)))) begin
        src_9_V_V_read = 1'b1;
    end else begin
        src_9_V_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond8_fu_350_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond8_fu_350_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_01001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_01001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_01001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_01001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((src_9_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_8_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_7_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_6_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_5_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_4_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_3_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_2_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_1_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_0_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((src_9_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_8_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_7_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_6_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_5_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_4_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_3_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_2_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_1_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_0_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((src_9_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_8_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_7_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_6_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_5_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_4_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_3_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_2_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_1_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_0_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((src_9_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_8_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_7_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_6_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_5_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_4_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_3_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_2_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_1_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_0_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((dst_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage9_iter0 = ((dst_V_full_n == 1'b0) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage11_iter0 = ((dst_V_full_n == 1'b0) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp0_stage13_iter0 = ((dst_V_full_n == 1'b0) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp0_stage15_iter0 = ((dst_V_full_n == 1'b0) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_state18_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp0_stage17_iter0 = ((dst_V_full_n == 1'b0) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_state20_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_pp0_stage19_iter0 = ((dst_V_full_n == 1'b0) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_state22_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = (((src_9_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_8_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_7_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_6_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_5_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_4_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_3_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_2_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_1_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_0_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage2_iter0 = (((src_9_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_8_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_7_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_6_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_5_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_4_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_3_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_2_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_1_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)) | ((src_0_V_V_empty_n == 1'b0) & (exitcond8_reg_705 == 1'd0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage3_iter0 = ((dst_V_full_n == 1'b0) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_state6_pp0_stage4_iter0 = ((dst_V_full_n == 1'b0) & (exitcond8_reg_705 == 1'd0));
end

always @ (*) begin
    ap_block_state7_pp0_stage5_iter0 = ((dst_V_full_n == 1'b0) & (exitcond8_reg_705 == 1'd0));
end

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage7_iter0 = ((dst_V_full_n == 1'b0) & (exitcond8_reg_705 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign col_1_fu_356_p2 = (ap_phi_mux_col_phi_fu_342_p4 + 6'd1);

assign exitcond8_fu_350_p2 = ((ap_phi_mux_col_phi_fu_342_p4 == 6'd48) ? 1'b1 : 1'b0);

assign pos_fu_362_p3 = {{col_reg_338}, {1'd0}};

assign saveValueLayer2_V_Addr_A = saveValueLayer2_V_Addr_A_orig << 32'd2;

assign storemerge_1_fu_428_p3 = ((tmp_74_1_fu_424_p2[0:0] === 1'b1) ? tmp_V_2_reg_728 : tmp_V_3_reg_806);

assign storemerge_2_fu_453_p3 = ((tmp_74_2_fu_449_p2[0:0] === 1'b1) ? tmp_V_4_reg_735 : tmp_V_5_reg_813);

assign storemerge_3_fu_488_p3 = ((tmp_74_3_fu_484_p2[0:0] === 1'b1) ? tmp_V_6_reg_742 : tmp_V_7_reg_820);

assign storemerge_4_fu_520_p3 = ((tmp_74_4_fu_516_p2[0:0] === 1'b1) ? tmp_V_8_reg_749 : tmp_V_9_reg_827);

assign storemerge_5_fu_553_p3 = ((tmp_74_5_fu_549_p2[0:0] === 1'b1) ? tmp_V_10_reg_756 : tmp_V_11_reg_834);

assign storemerge_6_fu_588_p3 = ((tmp_74_6_fu_584_p2[0:0] === 1'b1) ? tmp_V_12_reg_763 : tmp_V_13_reg_841);

assign storemerge_7_fu_619_p3 = ((tmp_74_7_fu_615_p2[0:0] === 1'b1) ? tmp_V_14_reg_770 : tmp_V_15_reg_848);

assign storemerge_8_fu_651_p3 = ((tmp_74_8_fu_647_p2[0:0] === 1'b1) ? tmp_V_16_reg_777 : tmp_V_17_reg_855);

assign storemerge_9_fu_684_p3 = ((tmp_74_9_fu_680_p2[0:0] === 1'b1) ? tmp_V_18_reg_784 : tmp_V_19_reg_862);

assign storemerge_fu_403_p3 = ((tmp_10_fu_399_p2[0:0] === 1'b1) ? tmp_V_reg_722 : tmp_V_1_reg_800);

assign tmp_10_fu_399_p2 = (($signed(tmp_V_reg_722) > $signed(tmp_V_1_reg_800)) ? 1'b1 : 1'b0);

assign tmp_33_fu_413_p2 = (tmp_cast_fu_410_p1 + 8'd96);

assign tmp_34_fu_438_p2 = (tmp_cast120_cast_fu_435_p1 + 9'd192);

assign tmp_35_fu_474_p2 = ($signed(tmp_cast120_cast_reg_869) + $signed(9'd288));

assign tmp_36_fu_505_p4 = {{{{57'd3}, {col_reg_338}}}, {1'd0}};

assign tmp_37_fu_538_p2 = (tmp_cast1_fu_535_p1 + 10'd480);

assign tmp_38_fu_574_p2 = ($signed(tmp_cast1_reg_881) + $signed(10'd576));

assign tmp_39_fu_605_p2 = ($signed(tmp_cast1_reg_881) + $signed(10'd672));

assign tmp_40_fu_636_p4 = {{{{57'd6}, {col_reg_338}}}, {1'd0}};

assign tmp_41_cast_fu_419_p1 = tmp_33_fu_413_p2;

assign tmp_41_fu_666_p2 = ($signed(tmp_cast120_cast_reg_869) + $signed(9'd352));

assign tmp_42_cast_fu_444_p1 = tmp_34_fu_438_p2;

assign tmp_42_fu_388_p2 = (tmp_9_cast_fu_385_p1 + 8'd96);

assign tmp_43_cast_fu_479_p1 = tmp_35_fu_474_p2;

assign tmp_43_fu_463_p2 = (tmp_9_cast118_cast_fu_460_p1 + 9'd192);

assign tmp_44_fu_495_p2 = ($signed(tmp_9_cast118_cast_reg_875) + $signed(9'd288));

assign tmp_45_cast_fu_544_p1 = tmp_37_fu_538_p2;

assign tmp_45_fu_527_p3 = {{57'd3}, {tmp_s_reg_791}};

assign tmp_46_cast_fu_579_p1 = tmp_38_fu_574_p2;

assign tmp_46_fu_563_p2 = (tmp_9_cast1_fu_560_p1 + 10'd480);

assign tmp_47_cast_fu_610_p1 = tmp_39_fu_605_p2;

assign tmp_47_fu_595_p2 = ($signed(tmp_9_cast1_reg_887) + $signed(10'd576));

assign tmp_48_fu_626_p2 = ($signed(tmp_9_cast1_reg_887) + $signed(10'd672));

assign tmp_49_cast1_fu_671_p1 = $signed(tmp_41_fu_666_p2);

assign tmp_49_cast_fu_675_p1 = $unsigned(tmp_49_cast1_fu_671_p1);

assign tmp_49_fu_658_p3 = {{57'd6}, {tmp_s_reg_791}};

assign tmp_50_cast_fu_394_p1 = tmp_42_fu_388_p2;

assign tmp_50_fu_691_p2 = ($signed(tmp_9_cast118_cast_reg_875) + $signed(9'd352));

assign tmp_51_cast_fu_469_p1 = tmp_43_fu_463_p2;

assign tmp_52_cast_fu_500_p1 = tmp_44_fu_495_p2;

assign tmp_54_cast_fu_569_p1 = tmp_46_fu_563_p2;

assign tmp_55_cast_fu_600_p1 = tmp_47_fu_595_p2;

assign tmp_56_cast_fu_631_p1 = tmp_48_fu_626_p2;

assign tmp_58_cast1_fu_696_p1 = $signed(tmp_50_fu_691_p2);

assign tmp_58_cast_fu_700_p1 = $unsigned(tmp_58_cast1_fu_696_p1);

assign tmp_74_1_fu_424_p2 = (($signed(tmp_V_2_reg_728) > $signed(tmp_V_3_reg_806)) ? 1'b1 : 1'b0);

assign tmp_74_2_fu_449_p2 = (($signed(tmp_V_4_reg_735) > $signed(tmp_V_5_reg_813)) ? 1'b1 : 1'b0);

assign tmp_74_3_fu_484_p2 = (($signed(tmp_V_6_reg_742) > $signed(tmp_V_7_reg_820)) ? 1'b1 : 1'b0);

assign tmp_74_4_fu_516_p2 = (($signed(tmp_V_8_reg_749) > $signed(tmp_V_9_reg_827)) ? 1'b1 : 1'b0);

assign tmp_74_5_fu_549_p2 = (($signed(tmp_V_10_reg_756) > $signed(tmp_V_11_reg_834)) ? 1'b1 : 1'b0);

assign tmp_74_6_fu_584_p2 = (($signed(tmp_V_12_reg_763) > $signed(tmp_V_13_reg_841)) ? 1'b1 : 1'b0);

assign tmp_74_7_fu_615_p2 = (($signed(tmp_V_14_reg_770) > $signed(tmp_V_15_reg_848)) ? 1'b1 : 1'b0);

assign tmp_74_8_fu_647_p2 = (($signed(tmp_V_16_reg_777) > $signed(tmp_V_17_reg_855)) ? 1'b1 : 1'b0);

assign tmp_74_9_fu_680_p2 = (($signed(tmp_V_18_reg_784) > $signed(tmp_V_19_reg_862)) ? 1'b1 : 1'b0);

assign tmp_9_cast118_cast_fu_460_p1 = tmp_s_reg_791;

assign tmp_9_cast1_fu_560_p1 = tmp_s_reg_791;

assign tmp_9_cast_fu_385_p1 = tmp_s_reg_791;

assign tmp_9_fu_380_p1 = tmp_s_fu_375_p2;

assign tmp_cast120_cast_fu_435_p1 = pos_reg_714;

assign tmp_cast1_fu_535_p1 = pos_reg_714;

assign tmp_cast_fu_410_p1 = pos_reg_714;

assign tmp_fu_370_p1 = pos_fu_362_p3;

assign tmp_s_fu_375_p2 = (pos_reg_714 | 7'd1);

always @ (posedge ap_clk) begin
    pos_reg_714[0] <= 1'b0;
    tmp_s_reg_791[0] <= 1'b1;
    tmp_cast120_cast_reg_869[0] <= 1'b0;
    tmp_cast120_cast_reg_869[8:7] <= 2'b00;
    tmp_9_cast118_cast_reg_875[0] <= 1'b1;
    tmp_9_cast118_cast_reg_875[8:7] <= 2'b00;
    tmp_cast1_reg_881[0] <= 1'b0;
    tmp_cast1_reg_881[9:7] <= 3'b000;
    tmp_9_cast1_reg_887[0] <= 1'b1;
    tmp_9_cast1_reg_887[9:7] <= 3'b000;
end

endmodule //Layer23_Maxpool_read
